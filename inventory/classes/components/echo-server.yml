parameters:
  components:
    echo-server:
      application: microservices
      image: jmalloc/echo-server
      pull_policy: Always
      service:
        type: LoadBalancer
      network_policies:
        pod_selector: 
          label: test
        ingress:
          - from:
            - podSelector:
                matchLabels:
                  role: frontend
            ports:
            - protocol: TCP
              port: 6379
      additional_containers:
        nginx:
          image: nginx
          ports:
            nginx: 
              service_port: 80
          config_maps:
            config:
              mount: /etc/nginx/conf.d/nginx.conf
              subPath: nginx.conf
      healthcheck:
        liveness:
          type: http
          port: http
          httpHeaders:
          - name: Host
            value: www.google.com
          path: /_health
          timeout_seconds: 3
        readiness:
          type: http
          port: http
          path: /_ready
          timeout_seconds: 5
      ports:
        http:
          container_port: 8080
        internal:
          container_port: 8081
      secrets:
        secret:
          data:
            encoded_secret:
              value: my_secret
              b64_encode: true
            better_secret:
              value: ?{base64:targets/${target_name}/password||randomstr|base64}

      config_maps:
        config:
          mount: /opt/echo-service/echo-service.conf
          subPath: echo-service.conf
          data:
            echo-service.conf:
              template: "components/echo-server/echo-server.conf.j2"
              values:
                example: true
            nginx.conf:
              value: |
                server {
                   listen       80;
                   server_name  localhost;
                   location / {
                       proxy_pass  http://localhost:8080/;
                   }
                   error_page   500 502 503 504  /50x.html;
                   location = /50x.html {
                       root   /usr/share/nginx/html;
                   }
                }
            simple_config:
              value: "not mounted"
      resources:
        requests:
          memory: 1G
        limits:
          memory: 1G

  ingresses:
    global:
      paths:
        - backend:
            serviceName: echo-server
            servicePort: 80
          path: /echo/*
