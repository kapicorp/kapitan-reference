set -o nounset -o pipefail -o noclobber -o errexit

TARGET_NAME="echo-server"
TARGET_PATH="echo-server"
GCP_PROJECT_ID="echo-server"
TARGET="echo-server"
TARGET_RELATIVE_PATH_FROM_KAPITAN_BASEDIR=compiled/${TARGET_PATH}

SCRIPT_RELATIVE_PATH=${BASH_SOURCE[1]}
SCRIPT_RELATIVE_DIR=$(dirname ${SCRIPT_RELATIVE_PATH})
SCRIPT_ABS_PATH=$(cd "${SCRIPT_RELATIVE_DIR}"; pwd)

KAPITAN_ABSOLUTE_BASEDIR=${SCRIPT_ABS_PATH%${TARGET_RELATIVE_PATH_FROM_KAPITAN_BASEDIR}/*}
SCRIPT_RELATIVE_DIR_FROM_KAPITAN_BASEDIR=$(dirname ${SCRIPT_ABS_PATH#${KAPITAN_ABSOLUTE_BASEDIR}/})

GIT_ABSOLUTE_BASEDIR=$(cd ${KAPITAN_ABSOLUTE_BASEDIR}; git rev-parse --show-toplevel)
KAPITAN_BASEDIR_RELATIVE_PATH_FROM_GIT_BASEDIR=$(realpath ${KAPITAN_ABSOLUTE_BASEDIR} --relative-to=${GIT_ABSOLUTE_BASEDIR})
KAPITAN_BASEDIR_RELATIVE_PATH_FROM_SCRIPT_DIR=$(realpath ${KAPITAN_ABSOLUTE_BASEDIR} --relative-to=${SCRIPT_ABS_PATH})
KAPITAN_BASEDIR_RELATIVE_PATH_FROM_PWD=$(realpath ${KAPITAN_ABSOLUTE_BASEDIR} --relative-to=$(pwd))

BASH_INCLUDE_RELATIVE_PATH=${BASH_SOURCE[0]}
BASH_INCLUDE_RELATIVE_DIR=$(dirname ${BASH_INCLUDE_RELATIVE_PATH})

KAPITAN_TEMPLATES_DIRNAME=${KAPITAN_BASEDIR_RELATIVE_PATH_FROM_GIT_BASEDIR%%/*}

# Legacy
ROOT=${KAPITAN_ABSOLUTE_BASEDIR}
DIR=${SCRIPT_RELATIVE_DIR}

source ${SCRIPT_RELATIVE_DIR}/gcloud.include
source ${SCRIPT_RELATIVE_DIR}/kapitan.include

KUBECTL_CONTEXT="${TARGET}"
KUBECTL_SCRIPT="${SCRIPT_RELATIVE_DIR}/kubectl"
KUBECTL_COMMAND="${KUBECTL_BINARY} --context ${KUBECTL_CONTEXT}"

function in_docker() {
  grep -sq 'docker\|lxc' /proc/1/cgroup
}

function check_installed() {
  CMD=$1
  if ! $(which ${CMD} > /dev/null); then
      error "${CMD} not installed. Exiting..."
  fi
}

# Only GNU xargs supports --no-run-if-empty
XARGS="xargs --no-run-if-empty"
if ! echo | $XARGS 2>/dev/null; then
  # Looks like we have BSD xargs, use -x instead
  XARGS="xargs"
fi


SCRIPT_TMP_DIR="$(mktemp -d /tmp/kapitan.XXXXXXXXXX)"
trap "rm -fr '${SCRIPT_TMP_DIR}'" INT TERM EXIT