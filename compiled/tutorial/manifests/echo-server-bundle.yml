apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    manifests.kapicorp.com/generated: 'true'
  labels:
    name: echo-server
  name: echo-server
  namespace: tutorial
spec:
  replicas: 3
  selector:
    matchLabels:
      name: echo-server
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: echo-server
    spec:
      containers:
        - env:
            - name: KAPITAN_APPLICATION
              value: microservices
          image: jmalloc/echo-server
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            httpGet:
              httpHeaders:
                - name: Host
                  value: www.google.com
              path: /_health
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 3
          name: echo-server
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: internal
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /_ready
              port: http
              scheme: HTTP
            initialDelaySeconds: 0
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 1G
            requests:
              memory: 1G
          volumeMounts:
            - mountPath: /opt/echo-service/echo-service.conf
              name: config
              readOnly: true
              subPath: echo-service.conf
        - image: nginx
          imagePullPolicy: IfNotPresent
          name: nginx
          ports:
            - containerPort: 80
              name: nginx
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/nginx.conf
              name: config
              readOnly: true
              subPath: nginx.conf
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 420
            name: echo-server
          name: config
        - name: secret
          secret:
            defaultMode: 420
            secretName: echo-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: echo-server
  name: echo-server
  namespace: tutorial
spec:
  ports:
    - name: nginx
      port: 80
      protocol: TCP
      targetPort: nginx
  selector:
    name: echo-server
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  labels:
    name: echo-server
  name: echo-server
spec:
  ingress:
    - from:
        - podSelector:
            matchLabels:
              role: frontend
      ports:
        - port: 6379
          protocol: TCP
  podSelector:
    label: test
  policyTypes:
    - Ingress
    - Egress
