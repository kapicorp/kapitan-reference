apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: applications.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: applications.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    shortNames:
      - app
      - apps
    singular: application
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.sync.status
          name: Sync Status
          type: string
        - jsonPath: .status.health.status
          name: Health Status
          type: string
        - jsonPath: .status.sync.revision
          name: Revision
          priority: 10
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Application is a definition of Application resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            operation:
              description: Operation contains information about a requested or running
                operation
              properties:
                info:
                  description: Info is a list of informational items for this operation
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
                initiatedBy:
                  description: InitiatedBy contains information about who initiated
                    the operations
                  properties:
                    automated:
                      description: Automated is set to true if operation was initiated
                        automatically by the application controller.
                      type: boolean
                    username:
                      description: Username contains the name of a user who started
                        operation
                      type: string
                  type: object
                retry:
                  description: Retry controls the strategy to apply if a sync fails
                  properties:
                    backoff:
                      description: Backoff controls how to backoff on subsequent retries
                        of failed syncs
                      properties:
                        duration:
                          description: Duration is the amount to back off. Default
                            unit is seconds, but could also be a duration (e.g. "2m",
                            "1h")
                          type: string
                        factor:
                          description: Factor is a factor to multiply the base duration
                            after each failed retry
                          format: int64
                          type: integer
                        maxDuration:
                          description: MaxDuration is the maximum amount of time allowed
                            for the backoff strategy
                          type: string
                      type: object
                    limit:
                      description: Limit is the maximum number of attempts for retrying
                        a failed sync. If set to 0, no retries will be performed.
                      format: int64
                      type: integer
                  type: object
                sync:
                  description: Sync contains parameters for the operation
                  properties:
                    dryRun:
                      description: DryRun specifies to perform a `kubectl apply --dry-run`
                        without actually performing the sync
                      type: boolean
                    manifests:
                      description: Manifests is an optional field that overrides sync
                        source with a local directory for development
                      items:
                        type: string
                      type: array
                    prune:
                      description: Prune specifies to delete resources from the cluster
                        that are no longer tracked in git
                      type: boolean
                    resources:
                      description: Resources describes which resources shall be part
                        of the sync
                      items:
                        description: SyncOperationResource contains resources to sync.
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                      type: array
                    revision:
                      description: Revision is the revision (Git) or chart version
                        (Helm) which to sync the application to If omitted, will use
                        the revision specified in app spec.
                      type: string
                    source:
                      description: Source overrides the source definition set in the
                        application. This is typically set in a Rollback operation
                        and is nil during a Sync operation
                      properties:
                        chart:
                          description: Chart is a Helm chart name, and must be specified
                            for applications sourced from a Helm repo.
                          type: string
                        directory:
                          description: Directory holds path/directory specific options
                          properties:
                            exclude:
                              description: Exclude contains a glob pattern to match
                                paths against that should be explicitly excluded from
                                being used during manifest generation
                              type: string
                            include:
                              description: Include contains a glob pattern to match
                                paths against that should be explicitly included during
                                manifest generation
                              type: string
                            jsonnet:
                              description: Jsonnet holds options specific to Jsonnet
                              properties:
                                extVars:
                                  description: ExtVars is a list of Jsonnet External
                                    Variables
                                  items:
                                    description: JsonnetVar represents a variable
                                      to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                libs:
                                  description: Additional library search dirs
                                  items:
                                    type: string
                                  type: array
                                tlas:
                                  description: TLAS is a list of Jsonnet Top-level
                                    Arguments
                                  items:
                                    description: JsonnetVar represents a variable
                                      to be passed to jsonnet during manifest generation
                                    properties:
                                      code:
                                        type: boolean
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                              type: object
                            recurse:
                              description: Recurse specifies whether to scan a directory
                                recursively for manifests
                              type: boolean
                          type: object
                        helm:
                          description: Helm holds helm specific options
                          properties:
                            fileParameters:
                              description: FileParameters are file parameters to the
                                helm template
                              items:
                                description: HelmFileParameter is a file parameter
                                  that's passed to helm template during manifest generation
                                properties:
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  path:
                                    description: Path is the path to the file containing
                                      the values for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            parameters:
                              description: Parameters is a list of Helm parameters
                                which are passed to the helm template command upon
                                manifest generation
                              items:
                                description: HelmParameter is a parameter that's passed
                                  to helm template during manifest generation
                                properties:
                                  forceString:
                                    description: ForceString determines whether to
                                      tell Helm to interpret booleans and numbers
                                      as strings
                                    type: boolean
                                  name:
                                    description: Name is the name of the Helm parameter
                                    type: string
                                  value:
                                    description: Value is the value for the Helm parameter
                                    type: string
                                type: object
                              type: array
                            passCredentials:
                              description: PassCredentials pass credentials to all
                                domains (Helm's --pass-credentials)
                              type: boolean
                            releaseName:
                              description: ReleaseName is the Helm release name to
                                use. If omitted it will use the application name
                              type: string
                            valueFiles:
                              description: ValuesFiles is a list of Helm value files
                                to use when generating a template
                              items:
                                type: string
                              type: array
                            values:
                              description: Values specifies Helm values to be passed
                                to helm template, typically defined as a block
                              type: string
                            version:
                              description: Version is the Helm version to use for
                                templating (either "2" or "3")
                              type: string
                          type: object
                        ksonnet:
                          description: Ksonnet holds ksonnet specific options
                          properties:
                            environment:
                              description: Environment is a ksonnet application environment
                                name
                              type: string
                            parameters:
                              description: Parameters are a list of ksonnet component
                                parameter override values
                              items:
                                description: KsonnetParameter is a ksonnet component
                                  parameter
                                properties:
                                  component:
                                    type: string
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                          type: object
                        kustomize:
                          description: Kustomize holds kustomize specific options
                          properties:
                            commonAnnotations:
                              additionalProperties:
                                type: string
                              description: CommonAnnotations is a list of additional
                                annotations to add to rendered manifests
                              type: object
                            commonLabels:
                              additionalProperties:
                                type: string
                              description: CommonLabels is a list of additional labels
                                to add to rendered manifests
                              type: object
                            forceCommonAnnotations:
                              description: ForceCommonAnnotations specifies whether
                                to force applying common annotations to resources
                                for Kustomize apps
                              type: boolean
                            forceCommonLabels:
                              description: ForceCommonLabels specifies whether to
                                force applying common labels to resources for Kustomize
                                apps
                              type: boolean
                            images:
                              description: Images is a list of Kustomize image override
                                specifications
                              items:
                                description: KustomizeImage represents a Kustomize
                                  image definition in the format [old_image_name=]<image_name>:<image_tag>
                                type: string
                              type: array
                            namePrefix:
                              description: NamePrefix is a prefix appended to resources
                                for Kustomize apps
                              type: string
                            nameSuffix:
                              description: NameSuffix is a suffix appended to resources
                                for Kustomize apps
                              type: string
                            version:
                              description: Version controls which version of Kustomize
                                to use for rendering manifests
                              type: string
                          type: object
                        path:
                          description: Path is a directory path within the Git repository,
                            and is only valid for applications sourced from Git.
                          type: string
                        plugin:
                          description: ConfigManagementPlugin holds config management
                            plugin specific options
                          properties:
                            env:
                              description: Env is a list of environment variable entries
                              items:
                                description: EnvEntry represents an entry in the application's
                                  environment
                                properties:
                                  name:
                                    description: Name is the name of the variable,
                                      usually expressed in uppercase
                                    type: string
                                  value:
                                    description: Value is the value of the variable
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            name:
                              type: string
                          type: object
                        repoURL:
                          description: RepoURL is the URL to the repository (Git or
                            Helm) that contains the application manifests
                          type: string
                        targetRevision:
                          description: TargetRevision defines the revision of the
                            source to sync the application to. In case of Git, this
                            can be commit, tag, or branch. If omitted, will equal
                            to HEAD. In case of Helm, this is a semver tag for the
                            Chart's version.
                          type: string
                      required:
                        - repoURL
                      type: object
                    syncOptions:
                      description: SyncOptions provide per-sync sync-options, e.g.
                        Validate=false
                      items:
                        type: string
                      type: array
                    syncStrategy:
                      description: SyncStrategy describes how to perform the sync
                      properties:
                        apply:
                          description: Apply will perform a `kubectl apply` to perform
                            the sync.
                          properties:
                            force:
                              description: Force indicates whether or not to supply
                                the --force flag to `kubectl apply`. The --force flag
                                deletes and re-create the resource, when PATCH encounters
                                conflict and has retried for 5 times.
                              type: boolean
                          type: object
                        hook:
                          description: Hook will submit any referenced resources to
                            perform the sync. This is the default strategy
                          properties:
                            force:
                              description: Force indicates whether or not to supply
                                the --force flag to `kubectl apply`. The --force flag
                                deletes and re-create the resource, when PATCH encounters
                                conflict and has retried for 5 times.
                              type: boolean
                          type: object
                      type: object
                  type: object
              type: object
            spec:
              description: ApplicationSpec represents desired application state. Contains
                link to repository with application definition and additional parameters
                link definition revision.
              properties:
                destination:
                  description: Destination is a reference to the target Kubernetes
                    server and namespace
                  properties:
                    name:
                      description: Name is an alternate way of specifying the target
                        cluster by its symbolic name
                      type: string
                    namespace:
                      description: Namespace specifies the target namespace for the
                        application's resources. The namespace will only be set for
                        namespace-scoped resources that have not set a value for .metadata.namespace
                      type: string
                    server:
                      description: Server specifies the URL of the target cluster
                        and must be set to the Kubernetes control plane API
                      type: string
                  type: object
                ignoreDifferences:
                  description: IgnoreDifferences is a list of resources and their
                    fields which should be ignored during comparison
                  items:
                    description: ResourceIgnoreDifferences contains resource filter
                      and list of json paths which should be ignored during comparison
                      with live state.
                    properties:
                      group:
                        type: string
                      jqPathExpressions:
                        items:
                          type: string
                        type: array
                      jsonPointers:
                        items:
                          type: string
                        type: array
                      kind:
                        type: string
                      managedFieldsManagers:
                        description: ManagedFieldsManagers is a list of trusted managers.
                          Fields mutated by those managers will take precedence over
                          the desired state defined in the SCM and won't be displayed
                          in diffs
                        items:
                          type: string
                        type: array
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                      - kind
                    type: object
                  type: array
                info:
                  description: Info contains a list of information (URLs, email addresses,
                    and plain text) that relates to the application
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    required:
                      - name
                      - value
                    type: object
                  type: array
                project:
                  description: Project is a reference to the project this application
                    belongs to. The empty string means that application belongs to
                    the 'default' project.
                  type: string
                revisionHistoryLimit:
                  description: RevisionHistoryLimit limits the number of items kept
                    in the application's revision history, which is used for informational
                    purposes as well as for rollbacks to previous versions. This should
                    only be changed in exceptional circumstances. Setting to zero
                    will store no history. This will reduce storage used. Increasing
                    will increase the space used to store the history, so we do not
                    recommend increasing it. Default is 10.
                  format: int64
                  type: integer
                source:
                  description: Source is a reference to the location of the application's
                    manifests or chart
                  properties:
                    chart:
                      description: Chart is a Helm chart name, and must be specified
                        for applications sourced from a Helm repo.
                      type: string
                    directory:
                      description: Directory holds path/directory specific options
                      properties:
                        exclude:
                          description: Exclude contains a glob pattern to match paths
                            against that should be explicitly excluded from being
                            used during manifest generation
                          type: string
                        include:
                          description: Include contains a glob pattern to match paths
                            against that should be explicitly included during manifest
                            generation
                          type: string
                        jsonnet:
                          description: Jsonnet holds options specific to Jsonnet
                          properties:
                            extVars:
                              description: ExtVars is a list of Jsonnet External Variables
                              items:
                                description: JsonnetVar represents a variable to be
                                  passed to jsonnet during manifest generation
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                            libs:
                              description: Additional library search dirs
                              items:
                                type: string
                              type: array
                            tlas:
                              description: TLAS is a list of Jsonnet Top-level Arguments
                              items:
                                description: JsonnetVar represents a variable to be
                                  passed to jsonnet during manifest generation
                                properties:
                                  code:
                                    type: boolean
                                  name:
                                    type: string
                                  value:
                                    type: string
                                required:
                                  - name
                                  - value
                                type: object
                              type: array
                          type: object
                        recurse:
                          description: Recurse specifies whether to scan a directory
                            recursively for manifests
                          type: boolean
                      type: object
                    helm:
                      description: Helm holds helm specific options
                      properties:
                        fileParameters:
                          description: FileParameters are file parameters to the helm
                            template
                          items:
                            description: HelmFileParameter is a file parameter that's
                              passed to helm template during manifest generation
                            properties:
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              path:
                                description: Path is the path to the file containing
                                  the values for the Helm parameter
                                type: string
                            type: object
                          type: array
                        parameters:
                          description: Parameters is a list of Helm parameters which
                            are passed to the helm template command upon manifest
                            generation
                          items:
                            description: HelmParameter is a parameter that's passed
                              to helm template during manifest generation
                            properties:
                              forceString:
                                description: ForceString determines whether to tell
                                  Helm to interpret booleans and numbers as strings
                                type: boolean
                              name:
                                description: Name is the name of the Helm parameter
                                type: string
                              value:
                                description: Value is the value for the Helm parameter
                                type: string
                            type: object
                          type: array
                        passCredentials:
                          description: PassCredentials pass credentials to all domains
                            (Helm's --pass-credentials)
                          type: boolean
                        releaseName:
                          description: ReleaseName is the Helm release name to use.
                            If omitted it will use the application name
                          type: string
                        valueFiles:
                          description: ValuesFiles is a list of Helm value files to
                            use when generating a template
                          items:
                            type: string
                          type: array
                        values:
                          description: Values specifies Helm values to be passed to
                            helm template, typically defined as a block
                          type: string
                        version:
                          description: Version is the Helm version to use for templating
                            (either "2" or "3")
                          type: string
                      type: object
                    ksonnet:
                      description: Ksonnet holds ksonnet specific options
                      properties:
                        environment:
                          description: Environment is a ksonnet application environment
                            name
                          type: string
                        parameters:
                          description: Parameters are a list of ksonnet component
                            parameter override values
                          items:
                            description: KsonnetParameter is a ksonnet component parameter
                            properties:
                              component:
                                type: string
                              name:
                                type: string
                              value:
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                      type: object
                    kustomize:
                      description: Kustomize holds kustomize specific options
                      properties:
                        commonAnnotations:
                          additionalProperties:
                            type: string
                          description: CommonAnnotations is a list of additional annotations
                            to add to rendered manifests
                          type: object
                        commonLabels:
                          additionalProperties:
                            type: string
                          description: CommonLabels is a list of additional labels
                            to add to rendered manifests
                          type: object
                        forceCommonAnnotations:
                          description: ForceCommonAnnotations specifies whether to
                            force applying common annotations to resources for Kustomize
                            apps
                          type: boolean
                        forceCommonLabels:
                          description: ForceCommonLabels specifies whether to force
                            applying common labels to resources for Kustomize apps
                          type: boolean
                        images:
                          description: Images is a list of Kustomize image override
                            specifications
                          items:
                            description: KustomizeImage represents a Kustomize image
                              definition in the format [old_image_name=]<image_name>:<image_tag>
                            type: string
                          type: array
                        namePrefix:
                          description: NamePrefix is a prefix appended to resources
                            for Kustomize apps
                          type: string
                        nameSuffix:
                          description: NameSuffix is a suffix appended to resources
                            for Kustomize apps
                          type: string
                        version:
                          description: Version controls which version of Kustomize
                            to use for rendering manifests
                          type: string
                      type: object
                    path:
                      description: Path is a directory path within the Git repository,
                        and is only valid for applications sourced from Git.
                      type: string
                    plugin:
                      description: ConfigManagementPlugin holds config management
                        plugin specific options
                      properties:
                        env:
                          description: Env is a list of environment variable entries
                          items:
                            description: EnvEntry represents an entry in the application's
                              environment
                            properties:
                              name:
                                description: Name is the name of the variable, usually
                                  expressed in uppercase
                                type: string
                              value:
                                description: Value is the value of the variable
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        name:
                          type: string
                      type: object
                    repoURL:
                      description: RepoURL is the URL to the repository (Git or Helm)
                        that contains the application manifests
                      type: string
                    targetRevision:
                      description: TargetRevision defines the revision of the source
                        to sync the application to. In case of Git, this can be commit,
                        tag, or branch. If omitted, will equal to HEAD. In case of
                        Helm, this is a semver tag for the Chart's version.
                      type: string
                  required:
                    - repoURL
                  type: object
                syncPolicy:
                  description: SyncPolicy controls when and how a sync will be performed
                  properties:
                    automated:
                      description: Automated will keep an application synced to the
                        target revision
                      properties:
                        allowEmpty:
                          description: 'AllowEmpty allows apps have zero live resources
                            (default: false)'
                          type: boolean
                        prune:
                          description: 'Prune specifies whether to delete resources
                            from the cluster that are not found in the sources anymore
                            as part of automated sync (default: false)'
                          type: boolean
                        selfHeal:
                          description: 'SelfHeal specifes whether to revert resources
                            back to their desired state upon modification in the cluster
                            (default: false)'
                          type: boolean
                      type: object
                    retry:
                      description: Retry controls failed sync retry behavior
                      properties:
                        backoff:
                          description: Backoff controls how to backoff on subsequent
                            retries of failed syncs
                          properties:
                            duration:
                              description: Duration is the amount to back off. Default
                                unit is seconds, but could also be a duration (e.g.
                                "2m", "1h")
                              type: string
                            factor:
                              description: Factor is a factor to multiply the base
                                duration after each failed retry
                              format: int64
                              type: integer
                            maxDuration:
                              description: MaxDuration is the maximum amount of time
                                allowed for the backoff strategy
                              type: string
                          type: object
                        limit:
                          description: Limit is the maximum number of attempts for
                            retrying a failed sync. If set to 0, no retries will be
                            performed.
                          format: int64
                          type: integer
                      type: object
                    syncOptions:
                      description: Options allow you to specify whole app sync-options
                      items:
                        type: string
                      type: array
                  type: object
              required:
                - destination
                - project
                - source
              type: object
            status:
              description: ApplicationStatus contains status information for the application
              properties:
                conditions:
                  description: Conditions is a list of currently observed application
                    conditions
                  items:
                    description: ApplicationCondition contains details about an application
                      condition, which is usally an error or warning
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the time the condition
                          was last observed
                        format: date-time
                        type: string
                      message:
                        description: Message contains human-readable message indicating
                          details about condition
                        type: string
                      type:
                        description: Type is an application condition type
                        type: string
                    required:
                      - message
                      - type
                    type: object
                  type: array
                health:
                  description: Health contains information about the application's
                    current health status
                  properties:
                    message:
                      description: Message is a human-readable informational message
                        describing the health status
                      type: string
                    status:
                      description: Status holds the status code of the application
                        or resource
                      type: string
                  type: object
                history:
                  description: History contains information about the application's
                    sync history
                  items:
                    description: RevisionHistory contains history information about
                      a previous sync
                    properties:
                      deployStartedAt:
                        description: DeployStartedAt holds the time the sync operation
                          started
                        format: date-time
                        type: string
                      deployedAt:
                        description: DeployedAt holds the time the sync operation
                          completed
                        format: date-time
                        type: string
                      id:
                        description: ID is an auto incrementing identifier of the
                          RevisionHistory
                        format: int64
                        type: integer
                      revision:
                        description: Revision holds the revision the sync was performed
                          against
                        type: string
                      source:
                        description: Source is a reference to the application source
                          used for the sync operation
                        properties:
                          chart:
                            description: Chart is a Helm chart name, and must be specified
                              for applications sourced from a Helm repo.
                            type: string
                          directory:
                            description: Directory holds path/directory specific options
                            properties:
                              exclude:
                                description: Exclude contains a glob pattern to match
                                  paths against that should be explicitly excluded
                                  from being used during manifest generation
                                type: string
                              include:
                                description: Include contains a glob pattern to match
                                  paths against that should be explicitly included
                                  during manifest generation
                                type: string
                              jsonnet:
                                description: Jsonnet holds options specific to Jsonnet
                                properties:
                                  extVars:
                                    description: ExtVars is a list of Jsonnet External
                                      Variables
                                    items:
                                      description: JsonnetVar represents a variable
                                        to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                  libs:
                                    description: Additional library search dirs
                                    items:
                                      type: string
                                    type: array
                                  tlas:
                                    description: TLAS is a list of Jsonnet Top-level
                                      Arguments
                                    items:
                                      description: JsonnetVar represents a variable
                                        to be passed to jsonnet during manifest generation
                                      properties:
                                        code:
                                          type: boolean
                                        name:
                                          type: string
                                        value:
                                          type: string
                                      required:
                                        - name
                                        - value
                                      type: object
                                    type: array
                                type: object
                              recurse:
                                description: Recurse specifies whether to scan a directory
                                  recursively for manifests
                                type: boolean
                            type: object
                          helm:
                            description: Helm holds helm specific options
                            properties:
                              fileParameters:
                                description: FileParameters are file parameters to
                                  the helm template
                                items:
                                  description: HelmFileParameter is a file parameter
                                    that's passed to helm template during manifest
                                    generation
                                  properties:
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    path:
                                      description: Path is the path to the file containing
                                        the values for the Helm parameter
                                      type: string
                                  type: object
                                type: array
                              parameters:
                                description: Parameters is a list of Helm parameters
                                  which are passed to the helm template command upon
                                  manifest generation
                                items:
                                  description: HelmParameter is a parameter that's
                                    passed to helm template during manifest generation
                                  properties:
                                    forceString:
                                      description: ForceString determines whether
                                        to tell Helm to interpret booleans and numbers
                                        as strings
                                      type: boolean
                                    name:
                                      description: Name is the name of the Helm parameter
                                      type: string
                                    value:
                                      description: Value is the value for the Helm
                                        parameter
                                      type: string
                                  type: object
                                type: array
                              passCredentials:
                                description: PassCredentials pass credentials to all
                                  domains (Helm's --pass-credentials)
                                type: boolean
                              releaseName:
                                description: ReleaseName is the Helm release name
                                  to use. If omitted it will use the application name
                                type: string
                              valueFiles:
                                description: ValuesFiles is a list of Helm value files
                                  to use when generating a template
                                items:
                                  type: string
                                type: array
                              values:
                                description: Values specifies Helm values to be passed
                                  to helm template, typically defined as a block
                                type: string
                              version:
                                description: Version is the Helm version to use for
                                  templating (either "2" or "3")
                                type: string
                            type: object
                          ksonnet:
                            description: Ksonnet holds ksonnet specific options
                            properties:
                              environment:
                                description: Environment is a ksonnet application
                                  environment name
                                type: string
                              parameters:
                                description: Parameters are a list of ksonnet component
                                  parameter override values
                                items:
                                  description: KsonnetParameter is a ksonnet component
                                    parameter
                                  properties:
                                    component:
                                      type: string
                                    name:
                                      type: string
                                    value:
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                            type: object
                          kustomize:
                            description: Kustomize holds kustomize specific options
                            properties:
                              commonAnnotations:
                                additionalProperties:
                                  type: string
                                description: CommonAnnotations is a list of additional
                                  annotations to add to rendered manifests
                                type: object
                              commonLabels:
                                additionalProperties:
                                  type: string
                                description: CommonLabels is a list of additional
                                  labels to add to rendered manifests
                                type: object
                              forceCommonAnnotations:
                                description: ForceCommonAnnotations specifies whether
                                  to force applying common annotations to resources
                                  for Kustomize apps
                                type: boolean
                              forceCommonLabels:
                                description: ForceCommonLabels specifies whether to
                                  force applying common labels to resources for Kustomize
                                  apps
                                type: boolean
                              images:
                                description: Images is a list of Kustomize image override
                                  specifications
                                items:
                                  description: KustomizeImage represents a Kustomize
                                    image definition in the format [old_image_name=]<image_name>:<image_tag>
                                  type: string
                                type: array
                              namePrefix:
                                description: NamePrefix is a prefix appended to resources
                                  for Kustomize apps
                                type: string
                              nameSuffix:
                                description: NameSuffix is a suffix appended to resources
                                  for Kustomize apps
                                type: string
                              version:
                                description: Version controls which version of Kustomize
                                  to use for rendering manifests
                                type: string
                            type: object
                          path:
                            description: Path is a directory path within the Git repository,
                              and is only valid for applications sourced from Git.
                            type: string
                          plugin:
                            description: ConfigManagementPlugin holds config management
                              plugin specific options
                            properties:
                              env:
                                description: Env is a list of environment variable
                                  entries
                                items:
                                  description: EnvEntry represents an entry in the
                                    application's environment
                                  properties:
                                    name:
                                      description: Name is the name of the variable,
                                        usually expressed in uppercase
                                      type: string
                                    value:
                                      description: Value is the value of the variable
                                      type: string
                                  required:
                                    - name
                                    - value
                                  type: object
                                type: array
                              name:
                                type: string
                            type: object
                          repoURL:
                            description: RepoURL is the URL to the repository (Git
                              or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the
                              source to sync the application to. In case of Git, this
                              can be commit, tag, or branch. If omitted, will equal
                              to HEAD. In case of Helm, this is a semver tag for the
                              Chart's version.
                            type: string
                        required:
                          - repoURL
                        type: object
                    required:
                      - deployedAt
                      - id
                      - revision
                    type: object
                  type: array
                observedAt:
                  description: 'ObservedAt indicates when the application state was
                    updated without querying latest git state Deprecated: controller
                    no longer updates ObservedAt field'
                  format: date-time
                  type: string
                operationState:
                  description: OperationState contains information about any ongoing
                    operations, such as a sync
                  properties:
                    finishedAt:
                      description: FinishedAt contains time of operation completion
                      format: date-time
                      type: string
                    message:
                      description: Message holds any pertinent messages when attempting
                        to perform operation (typically errors).
                      type: string
                    operation:
                      description: Operation is the original requested operation
                      properties:
                        info:
                          description: Info is a list of informational items for this
                            operation
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            required:
                              - name
                              - value
                            type: object
                          type: array
                        initiatedBy:
                          description: InitiatedBy contains information about who
                            initiated the operations
                          properties:
                            automated:
                              description: Automated is set to true if operation was
                                initiated automatically by the application controller.
                              type: boolean
                            username:
                              description: Username contains the name of a user who
                                started operation
                              type: string
                          type: object
                        retry:
                          description: Retry controls the strategy to apply if a sync
                            fails
                          properties:
                            backoff:
                              description: Backoff controls how to backoff on subsequent
                                retries of failed syncs
                              properties:
                                duration:
                                  description: Duration is the amount to back off.
                                    Default unit is seconds, but could also be a duration
                                    (e.g. "2m", "1h")
                                  type: string
                                factor:
                                  description: Factor is a factor to multiply the
                                    base duration after each failed retry
                                  format: int64
                                  type: integer
                                maxDuration:
                                  description: MaxDuration is the maximum amount of
                                    time allowed for the backoff strategy
                                  type: string
                              type: object
                            limit:
                              description: Limit is the maximum number of attempts
                                for retrying a failed sync. If set to 0, no retries
                                will be performed.
                              format: int64
                              type: integer
                          type: object
                        sync:
                          description: Sync contains parameters for the operation
                          properties:
                            dryRun:
                              description: DryRun specifies to perform a `kubectl
                                apply --dry-run` without actually performing the sync
                              type: boolean
                            manifests:
                              description: Manifests is an optional field that overrides
                                sync source with a local directory for development
                              items:
                                type: string
                              type: array
                            prune:
                              description: Prune specifies to delete resources from
                                the cluster that are no longer tracked in git
                              type: boolean
                            resources:
                              description: Resources describes which resources shall
                                be part of the sync
                              items:
                                description: SyncOperationResource contains resources
                                  to sync.
                                properties:
                                  group:
                                    type: string
                                  kind:
                                    type: string
                                  name:
                                    type: string
                                  namespace:
                                    type: string
                                required:
                                  - kind
                                  - name
                                type: object
                              type: array
                            revision:
                              description: Revision is the revision (Git) or chart
                                version (Helm) which to sync the application to If
                                omitted, will use the revision specified in app spec.
                              type: string
                            source:
                              description: Source overrides the source definition
                                set in the application. This is typically set in a
                                Rollback operation and is nil during a Sync operation
                              properties:
                                chart:
                                  description: Chart is a Helm chart name, and must
                                    be specified for applications sourced from a Helm
                                    repo.
                                  type: string
                                directory:
                                  description: Directory holds path/directory specific
                                    options
                                  properties:
                                    exclude:
                                      description: Exclude contains a glob pattern
                                        to match paths against that should be explicitly
                                        excluded from being used during manifest generation
                                      type: string
                                    include:
                                      description: Include contains a glob pattern
                                        to match paths against that should be explicitly
                                        included during manifest generation
                                      type: string
                                    jsonnet:
                                      description: Jsonnet holds options specific
                                        to Jsonnet
                                      properties:
                                        extVars:
                                          description: ExtVars is a list of Jsonnet
                                            External Variables
                                          items:
                                            description: JsonnetVar represents a variable
                                              to be passed to jsonnet during manifest
                                              generation
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                        libs:
                                          description: Additional library search dirs
                                          items:
                                            type: string
                                          type: array
                                        tlas:
                                          description: TLAS is a list of Jsonnet Top-level
                                            Arguments
                                          items:
                                            description: JsonnetVar represents a variable
                                              to be passed to jsonnet during manifest
                                              generation
                                            properties:
                                              code:
                                                type: boolean
                                              name:
                                                type: string
                                              value:
                                                type: string
                                            required:
                                              - name
                                              - value
                                            type: object
                                          type: array
                                      type: object
                                    recurse:
                                      description: Recurse specifies whether to scan
                                        a directory recursively for manifests
                                      type: boolean
                                  type: object
                                helm:
                                  description: Helm holds helm specific options
                                  properties:
                                    fileParameters:
                                      description: FileParameters are file parameters
                                        to the helm template
                                      items:
                                        description: HelmFileParameter is a file parameter
                                          that's passed to helm template during manifest
                                          generation
                                        properties:
                                          name:
                                            description: Name is the name of the Helm
                                              parameter
                                            type: string
                                          path:
                                            description: Path is the path to the file
                                              containing the values for the Helm parameter
                                            type: string
                                        type: object
                                      type: array
                                    parameters:
                                      description: Parameters is a list of Helm parameters
                                        which are passed to the helm template command
                                        upon manifest generation
                                      items:
                                        description: HelmParameter is a parameter
                                          that's passed to helm template during manifest
                                          generation
                                        properties:
                                          forceString:
                                            description: ForceString determines whether
                                              to tell Helm to interpret booleans and
                                              numbers as strings
                                            type: boolean
                                          name:
                                            description: Name is the name of the Helm
                                              parameter
                                            type: string
                                          value:
                                            description: Value is the value for the
                                              Helm parameter
                                            type: string
                                        type: object
                                      type: array
                                    passCredentials:
                                      description: PassCredentials pass credentials
                                        to all domains (Helm's --pass-credentials)
                                      type: boolean
                                    releaseName:
                                      description: ReleaseName is the Helm release
                                        name to use. If omitted it will use the application
                                        name
                                      type: string
                                    valueFiles:
                                      description: ValuesFiles is a list of Helm value
                                        files to use when generating a template
                                      items:
                                        type: string
                                      type: array
                                    values:
                                      description: Values specifies Helm values to
                                        be passed to helm template, typically defined
                                        as a block
                                      type: string
                                    version:
                                      description: Version is the Helm version to
                                        use for templating (either "2" or "3")
                                      type: string
                                  type: object
                                ksonnet:
                                  description: Ksonnet holds ksonnet specific options
                                  properties:
                                    environment:
                                      description: Environment is a ksonnet application
                                        environment name
                                      type: string
                                    parameters:
                                      description: Parameters are a list of ksonnet
                                        component parameter override values
                                      items:
                                        description: KsonnetParameter is a ksonnet
                                          component parameter
                                        properties:
                                          component:
                                            type: string
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                kustomize:
                                  description: Kustomize holds kustomize specific
                                    options
                                  properties:
                                    commonAnnotations:
                                      additionalProperties:
                                        type: string
                                      description: CommonAnnotations is a list of
                                        additional annotations to add to rendered
                                        manifests
                                      type: object
                                    commonLabels:
                                      additionalProperties:
                                        type: string
                                      description: CommonLabels is a list of additional
                                        labels to add to rendered manifests
                                      type: object
                                    forceCommonAnnotations:
                                      description: ForceCommonAnnotations specifies
                                        whether to force applying common annotations
                                        to resources for Kustomize apps
                                      type: boolean
                                    forceCommonLabels:
                                      description: ForceCommonLabels specifies whether
                                        to force applying common labels to resources
                                        for Kustomize apps
                                      type: boolean
                                    images:
                                      description: Images is a list of Kustomize image
                                        override specifications
                                      items:
                                        description: KustomizeImage represents a Kustomize
                                          image definition in the format [old_image_name=]<image_name>:<image_tag>
                                        type: string
                                      type: array
                                    namePrefix:
                                      description: NamePrefix is a prefix appended
                                        to resources for Kustomize apps
                                      type: string
                                    nameSuffix:
                                      description: NameSuffix is a suffix appended
                                        to resources for Kustomize apps
                                      type: string
                                    version:
                                      description: Version controls which version
                                        of Kustomize to use for rendering manifests
                                      type: string
                                  type: object
                                path:
                                  description: Path is a directory path within the
                                    Git repository, and is only valid for applications
                                    sourced from Git.
                                  type: string
                                plugin:
                                  description: ConfigManagementPlugin holds config
                                    management plugin specific options
                                  properties:
                                    env:
                                      description: Env is a list of environment variable
                                        entries
                                      items:
                                        description: EnvEntry represents an entry
                                          in the application's environment
                                        properties:
                                          name:
                                            description: Name is the name of the variable,
                                              usually expressed in uppercase
                                            type: string
                                          value:
                                            description: Value is the value of the
                                              variable
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    name:
                                      type: string
                                  type: object
                                repoURL:
                                  description: RepoURL is the URL to the repository
                                    (Git or Helm) that contains the application manifests
                                  type: string
                                targetRevision:
                                  description: TargetRevision defines the revision
                                    of the source to sync the application to. In case
                                    of Git, this can be commit, tag, or branch. If
                                    omitted, will equal to HEAD. In case of Helm,
                                    this is a semver tag for the Chart's version.
                                  type: string
                              required:
                                - repoURL
                              type: object
                            syncOptions:
                              description: SyncOptions provide per-sync sync-options,
                                e.g. Validate=false
                              items:
                                type: string
                              type: array
                            syncStrategy:
                              description: SyncStrategy describes how to perform the
                                sync
                              properties:
                                apply:
                                  description: Apply will perform a `kubectl apply`
                                    to perform the sync.
                                  properties:
                                    force:
                                      description: Force indicates whether or not
                                        to supply the --force flag to `kubectl apply`.
                                        The --force flag deletes and re-create the
                                        resource, when PATCH encounters conflict and
                                        has retried for 5 times.
                                      type: boolean
                                  type: object
                                hook:
                                  description: Hook will submit any referenced resources
                                    to perform the sync. This is the default strategy
                                  properties:
                                    force:
                                      description: Force indicates whether or not
                                        to supply the --force flag to `kubectl apply`.
                                        The --force flag deletes and re-create the
                                        resource, when PATCH encounters conflict and
                                        has retried for 5 times.
                                      type: boolean
                                  type: object
                              type: object
                          type: object
                      type: object
                    phase:
                      description: Phase is the current phase of the operation
                      type: string
                    retryCount:
                      description: RetryCount contains time of operation retries
                      format: int64
                      type: integer
                    startedAt:
                      description: StartedAt contains time of operation start
                      format: date-time
                      type: string
                    syncResult:
                      description: SyncResult is the result of a Sync operation
                      properties:
                        resources:
                          description: Resources contains a list of sync result items
                            for each individual resource in a sync operation
                          items:
                            description: ResourceResult holds the operation result
                              details of a specific resource
                            properties:
                              group:
                                description: Group specifies the API group of the
                                  resource
                                type: string
                              hookPhase:
                                description: HookPhase contains the state of any operation
                                  associated with this resource OR hook This can also
                                  contain values for non-hook resources.
                                type: string
                              hookType:
                                description: HookType specifies the type of the hook.
                                  Empty for non-hook resources
                                type: string
                              kind:
                                description: Kind specifies the API kind of the resource
                                type: string
                              message:
                                description: Message contains an informational or
                                  error message for the last sync OR operation
                                type: string
                              name:
                                description: Name specifies the name of the resource
                                type: string
                              namespace:
                                description: Namespace specifies the target namespace
                                  of the resource
                                type: string
                              status:
                                description: Status holds the final result of the
                                  sync. Will be empty if the resources is yet to be
                                  applied/pruned and is always zero-value for hooks
                                type: string
                              syncPhase:
                                description: SyncPhase indicates the particular phase
                                  of the sync that this result was acquired in
                                type: string
                              version:
                                description: Version specifies the API version of
                                  the resource
                                type: string
                            required:
                              - group
                              - kind
                              - name
                              - namespace
                              - version
                            type: object
                          type: array
                        revision:
                          description: Revision holds the revision this sync operation
                            was performed to
                          type: string
                        source:
                          description: Source records the application source information
                            of the sync, used for comparing auto-sync
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be
                                specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific
                                options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to
                                    match paths against that should be explicitly
                                    excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to
                                    match paths against that should be explicitly
                                    included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External
                                        Variables
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level
                                        Arguments
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a
                                    directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters
                                    to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter
                                      that's passed to helm template during manifest
                                      generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file
                                          containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                parameters:
                                  description: Parameters is a list of Helm parameters
                                    which are passed to the helm template command
                                    upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's
                                      passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether
                                          to tell Helm to interpret booleans and numbers
                                          as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm
                                          parameter
                                        type: string
                                    type: object
                                  type: array
                                passCredentials:
                                  description: PassCredentials pass credentials to
                                    all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name
                                    to use. If omitted it will use the application
                                    name
                                  type: string
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value
                                    files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be
                                    passed to helm template, typically defined as
                                    a block
                                  type: string
                                version:
                                  description: Version is the Helm version to use
                                    for templating (either "2" or "3")
                                  type: string
                              type: object
                            ksonnet:
                              description: Ksonnet holds ksonnet specific options
                              properties:
                                environment:
                                  description: Environment is a ksonnet application
                                    environment name
                                  type: string
                                parameters:
                                  description: Parameters are a list of ksonnet component
                                    parameter override values
                                  items:
                                    description: KsonnetParameter is a ksonnet component
                                      parameter
                                    properties:
                                      component:
                                        type: string
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional
                                    annotations to add to rendered manifests
                                  type: object
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional
                                    labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether
                                    to force applying common annotations to resources
                                    for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether
                                    to force applying common labels to resources for
                                    Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image
                                    override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize
                                      image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to
                                    resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to
                                    resources for Kustomize apps
                                  type: string
                                version:
                                  description: Version controls which version of Kustomize
                                    to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git
                                repository, and is only valid for applications sourced
                                from Git.
                              type: string
                            plugin:
                              description: ConfigManagementPlugin holds config management
                                plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable
                                    entries
                                  items:
                                    description: EnvEntry represents an entry in the
                                      application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable,
                                          usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                              type: object
                            repoURL:
                              description: RepoURL is the URL to the repository (Git
                                or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of
                                the source to sync the application to. In case of
                                Git, this can be commit, tag, or branch. If omitted,
                                will equal to HEAD. In case of Helm, this is a semver
                                tag for the Chart's version.
                              type: string
                          required:
                            - repoURL
                          type: object
                      required:
                        - revision
                      type: object
                  required:
                    - operation
                    - phase
                    - startedAt
                  type: object
                reconciledAt:
                  description: ReconciledAt indicates when the application state was
                    reconciled using the latest git version
                  format: date-time
                  type: string
                resources:
                  description: Resources is a list of Kubernetes resources managed
                    by this application
                  items:
                    description: 'ResourceStatus holds the current sync and health
                      status of a resource TODO: describe members of this type'
                    properties:
                      group:
                        type: string
                      health:
                        description: HealthStatus contains information about the currently
                          observed health state of an application or resource
                        properties:
                          message:
                            description: Message is a human-readable informational
                              message describing the health status
                            type: string
                          status:
                            description: Status holds the status code of the application
                              or resource
                            type: string
                        type: object
                      hook:
                        type: boolean
                      kind:
                        type: string
                      name:
                        type: string
                      namespace:
                        type: string
                      requiresPruning:
                        type: boolean
                      status:
                        description: SyncStatusCode is a type which represents possible
                          comparison results
                        type: string
                      version:
                        type: string
                    type: object
                  type: array
                sourceType:
                  description: SourceType specifies the type of this application
                  type: string
                summary:
                  description: Summary contains a list of URLs and container images
                    used by this application
                  properties:
                    externalURLs:
                      description: ExternalURLs holds all external URLs of application
                        child resources.
                      items:
                        type: string
                      type: array
                    images:
                      description: Images holds all images of application child resources.
                      items:
                        type: string
                      type: array
                  type: object
                sync:
                  description: Sync contains information about the application's current
                    sync status
                  properties:
                    comparedTo:
                      description: ComparedTo contains information about what has
                        been compared
                      properties:
                        destination:
                          description: Destination is a reference to the application's
                            destination used for comparison
                          properties:
                            name:
                              description: Name is an alternate way of specifying
                                the target cluster by its symbolic name
                              type: string
                            namespace:
                              description: Namespace specifies the target namespace
                                for the application's resources. The namespace will
                                only be set for namespace-scoped resources that have
                                not set a value for .metadata.namespace
                              type: string
                            server:
                              description: Server specifies the URL of the target
                                cluster and must be set to the Kubernetes control
                                plane API
                              type: string
                          type: object
                        source:
                          description: Source is a reference to the application's
                            source used for comparison
                          properties:
                            chart:
                              description: Chart is a Helm chart name, and must be
                                specified for applications sourced from a Helm repo.
                              type: string
                            directory:
                              description: Directory holds path/directory specific
                                options
                              properties:
                                exclude:
                                  description: Exclude contains a glob pattern to
                                    match paths against that should be explicitly
                                    excluded from being used during manifest generation
                                  type: string
                                include:
                                  description: Include contains a glob pattern to
                                    match paths against that should be explicitly
                                    included during manifest generation
                                  type: string
                                jsonnet:
                                  description: Jsonnet holds options specific to Jsonnet
                                  properties:
                                    extVars:
                                      description: ExtVars is a list of Jsonnet External
                                        Variables
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                    libs:
                                      description: Additional library search dirs
                                      items:
                                        type: string
                                      type: array
                                    tlas:
                                      description: TLAS is a list of Jsonnet Top-level
                                        Arguments
                                      items:
                                        description: JsonnetVar represents a variable
                                          to be passed to jsonnet during manifest
                                          generation
                                        properties:
                                          code:
                                            type: boolean
                                          name:
                                            type: string
                                          value:
                                            type: string
                                        required:
                                          - name
                                          - value
                                        type: object
                                      type: array
                                  type: object
                                recurse:
                                  description: Recurse specifies whether to scan a
                                    directory recursively for manifests
                                  type: boolean
                              type: object
                            helm:
                              description: Helm holds helm specific options
                              properties:
                                fileParameters:
                                  description: FileParameters are file parameters
                                    to the helm template
                                  items:
                                    description: HelmFileParameter is a file parameter
                                      that's passed to helm template during manifest
                                      generation
                                    properties:
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      path:
                                        description: Path is the path to the file
                                          containing the values for the Helm parameter
                                        type: string
                                    type: object
                                  type: array
                                parameters:
                                  description: Parameters is a list of Helm parameters
                                    which are passed to the helm template command
                                    upon manifest generation
                                  items:
                                    description: HelmParameter is a parameter that's
                                      passed to helm template during manifest generation
                                    properties:
                                      forceString:
                                        description: ForceString determines whether
                                          to tell Helm to interpret booleans and numbers
                                          as strings
                                        type: boolean
                                      name:
                                        description: Name is the name of the Helm
                                          parameter
                                        type: string
                                      value:
                                        description: Value is the value for the Helm
                                          parameter
                                        type: string
                                    type: object
                                  type: array
                                passCredentials:
                                  description: PassCredentials pass credentials to
                                    all domains (Helm's --pass-credentials)
                                  type: boolean
                                releaseName:
                                  description: ReleaseName is the Helm release name
                                    to use. If omitted it will use the application
                                    name
                                  type: string
                                valueFiles:
                                  description: ValuesFiles is a list of Helm value
                                    files to use when generating a template
                                  items:
                                    type: string
                                  type: array
                                values:
                                  description: Values specifies Helm values to be
                                    passed to helm template, typically defined as
                                    a block
                                  type: string
                                version:
                                  description: Version is the Helm version to use
                                    for templating (either "2" or "3")
                                  type: string
                              type: object
                            ksonnet:
                              description: Ksonnet holds ksonnet specific options
                              properties:
                                environment:
                                  description: Environment is a ksonnet application
                                    environment name
                                  type: string
                                parameters:
                                  description: Parameters are a list of ksonnet component
                                    parameter override values
                                  items:
                                    description: KsonnetParameter is a ksonnet component
                                      parameter
                                    properties:
                                      component:
                                        type: string
                                      name:
                                        type: string
                                      value:
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                              type: object
                            kustomize:
                              description: Kustomize holds kustomize specific options
                              properties:
                                commonAnnotations:
                                  additionalProperties:
                                    type: string
                                  description: CommonAnnotations is a list of additional
                                    annotations to add to rendered manifests
                                  type: object
                                commonLabels:
                                  additionalProperties:
                                    type: string
                                  description: CommonLabels is a list of additional
                                    labels to add to rendered manifests
                                  type: object
                                forceCommonAnnotations:
                                  description: ForceCommonAnnotations specifies whether
                                    to force applying common annotations to resources
                                    for Kustomize apps
                                  type: boolean
                                forceCommonLabels:
                                  description: ForceCommonLabels specifies whether
                                    to force applying common labels to resources for
                                    Kustomize apps
                                  type: boolean
                                images:
                                  description: Images is a list of Kustomize image
                                    override specifications
                                  items:
                                    description: KustomizeImage represents a Kustomize
                                      image definition in the format [old_image_name=]<image_name>:<image_tag>
                                    type: string
                                  type: array
                                namePrefix:
                                  description: NamePrefix is a prefix appended to
                                    resources for Kustomize apps
                                  type: string
                                nameSuffix:
                                  description: NameSuffix is a suffix appended to
                                    resources for Kustomize apps
                                  type: string
                                version:
                                  description: Version controls which version of Kustomize
                                    to use for rendering manifests
                                  type: string
                              type: object
                            path:
                              description: Path is a directory path within the Git
                                repository, and is only valid for applications sourced
                                from Git.
                              type: string
                            plugin:
                              description: ConfigManagementPlugin holds config management
                                plugin specific options
                              properties:
                                env:
                                  description: Env is a list of environment variable
                                    entries
                                  items:
                                    description: EnvEntry represents an entry in the
                                      application's environment
                                    properties:
                                      name:
                                        description: Name is the name of the variable,
                                          usually expressed in uppercase
                                        type: string
                                      value:
                                        description: Value is the value of the variable
                                        type: string
                                    required:
                                      - name
                                      - value
                                    type: object
                                  type: array
                                name:
                                  type: string
                              type: object
                            repoURL:
                              description: RepoURL is the URL to the repository (Git
                                or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of
                                the source to sync the application to. In case of
                                Git, this can be commit, tag, or branch. If omitted,
                                will equal to HEAD. In case of Helm, this is a semver
                                tag for the Chart's version.
                              type: string
                          required:
                            - repoURL
                          type: object
                      required:
                        - destination
                        - source
                      type: object
                    revision:
                      description: Revision contains information about the revision
                        the comparison has been performed to
                      type: string
                    status:
                      description: Status is the sync state of the comparison
                      type: string
                  required:
                    - status
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  labels:
    app.kubernetes.io/name: argocdextensions.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: argocdextensions.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: ArgoCDExtension
    listKind: ArgoCDExtensionList
    plural: argocdextensions
    singular: argocdextension
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ArgoCDExtension is the Schema for the argocdextensions API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ArgoCDExtensionSpec defines the desired state of ArgoCDExtension
              properties:
                sources:
                  description: Sources specifies where the extension should come from
                  items:
                    description: ExtensionSource specifies where the extension should
                      be sourced from
                    properties:
                      git:
                        description: Git is specified if the extension should be sourced
                          from a git repository
                        properties:
                          revision:
                            description: Revision specifies the revision of the Repository
                              to fetch
                            type: string
                          url:
                            description: URL specifies the Git repository URL to fetch
                            type: string
                        type: object
                      web:
                        description: Web is specified if the extension should be sourced
                          from a web file
                        properties:
                          url:
                            description: URK specifies the remote file URL
                            type: string
                        type: object
                    type: object
                  type: array
              required:
                - sources
              type: object
            status:
              description: ArgoCDExtensionStatus defines the observed state of ArgoCDExtension
              properties:
                conditions:
                  items:
                    properties:
                      message:
                        description: Message contains human-readable message indicating
                          details about condition
                        type: string
                      status:
                        description: Boolean status describing if the condition is
                          currently true
                        type: string
                      type:
                        description: Type is an ArgoCDExtension condition type
                        type: string
                    required:
                      - message
                      - status
                      - type
                    type: object
                  type: array
              type: object
          type: object
      served: true
      storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/name: appprojects.argoproj.io
    app.kubernetes.io/part-of: argocd
  name: appprojects.argoproj.io
spec:
  group: argoproj.io
  names:
    kind: AppProject
    listKind: AppProjectList
    plural: appprojects
    shortNames:
      - appproj
      - appprojs
    singular: appproject
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: 'AppProject provides a logical grouping of applications, providing
            controls for: * where the apps may deploy to (cluster whitelist) * what
            may be deployed (repository whitelist, resource whitelist/blacklist) *
            who can access these applications (roles, OIDC group claims bindings)
            * and what they can do (RBAC policies) * automation access to these roles
            (JWT tokens)'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource
                this object represents. Servers may infer this from the endpoint the
                client submits requests to. Cannot be updated. In CamelCase. More
                info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: AppProjectSpec is the specification of an AppProject
              properties:
                clusterResourceBlacklist:
                  description: ClusterResourceBlacklist contains list of blacklisted
                    cluster level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                clusterResourceWhitelist:
                  description: ClusterResourceWhitelist contains list of whitelisted
                    cluster level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                description:
                  description: Description contains optional project description
                  type: string
                destinations:
                  description: Destinations contains list of destinations available
                    for deployment
                  items:
                    description: ApplicationDestination holds information about the
                      application's destination
                    properties:
                      name:
                        description: Name is an alternate way of specifying the target
                          cluster by its symbolic name
                        type: string
                      namespace:
                        description: Namespace specifies the target namespace for
                          the application's resources. The namespace will only be
                          set for namespace-scoped resources that have not set a value
                          for .metadata.namespace
                        type: string
                      server:
                        description: Server specifies the URL of the target cluster
                          and must be set to the Kubernetes control plane API
                        type: string
                    type: object
                  type: array
                namespaceResourceBlacklist:
                  description: NamespaceResourceBlacklist contains list of blacklisted
                    namespace level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                namespaceResourceWhitelist:
                  description: NamespaceResourceWhitelist contains list of whitelisted
                    namespace level resources
                  items:
                    description: GroupKind specifies a Group and a Kind, but does
                      not force a version.  This is useful for identifying concepts
                      during lookup stages without having partially valid types
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                    required:
                      - group
                      - kind
                    type: object
                  type: array
                orphanedResources:
                  description: OrphanedResources specifies if controller should monitor
                    orphaned resources of apps in this project
                  properties:
                    ignore:
                      description: Ignore contains a list of resources that are to
                        be excluded from orphaned resources monitoring
                      items:
                        description: OrphanedResourceKey is a reference to a resource
                          to be ignored from
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          name:
                            type: string
                        type: object
                      type: array
                    warn:
                      description: Warn indicates if warning condition should be created
                        for apps which have orphaned resources
                      type: boolean
                  type: object
                roles:
                  description: Roles are user defined RBAC roles associated with this
                    project
                  items:
                    description: ProjectRole represents a role that has access to
                      a project
                    properties:
                      description:
                        description: Description is a description of the role
                        type: string
                      groups:
                        description: Groups are a list of OIDC group claims bound
                          to this role
                        items:
                          type: string
                        type: array
                      jwtTokens:
                        description: JWTTokens are a list of generated JWT tokens
                          bound to this role
                        items:
                          description: JWTToken holds the issuedAt and expiresAt values
                            of a token
                          properties:
                            exp:
                              format: int64
                              type: integer
                            iat:
                              format: int64
                              type: integer
                            id:
                              type: string
                          required:
                            - iat
                          type: object
                        type: array
                      name:
                        description: Name is a name for this role
                        type: string
                      policies:
                        description: Policies Stores a list of casbin formatted strings
                          that define access policies for the role in the project
                        items:
                          type: string
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                signatureKeys:
                  description: SignatureKeys contains a list of PGP key IDs that commits
                    in Git must be signed with in order to be allowed for sync
                  items:
                    description: SignatureKey is the specification of a key required
                      to verify commit signatures with
                    properties:
                      keyID:
                        description: The ID of the key in hexadecimal notation
                        type: string
                    required:
                      - keyID
                    type: object
                  type: array
                sourceRepos:
                  description: SourceRepos contains list of repository URLs which
                    can be used for deployment
                  items:
                    type: string
                  type: array
                syncWindows:
                  description: SyncWindows controls when syncs can be run for apps
                    in this project
                  items:
                    description: SyncWindow contains the kind, time, duration and
                      attributes that are used to assign the syncWindows to apps
                    properties:
                      applications:
                        description: Applications contains a list of applications
                          that the window will apply to
                        items:
                          type: string
                        type: array
                      clusters:
                        description: Clusters contains a list of clusters that the
                          window will apply to
                        items:
                          type: string
                        type: array
                      duration:
                        description: Duration is the amount of time the sync window
                          will be open
                        type: string
                      kind:
                        description: Kind defines if the window allows or blocks syncs
                        type: string
                      manualSync:
                        description: ManualSync enables manual syncs when they would
                          otherwise be blocked
                        type: boolean
                      namespaces:
                        description: Namespaces contains a list of namespaces that
                          the window will apply to
                        items:
                          type: string
                        type: array
                      schedule:
                        description: Schedule is the time the window will begin, specified
                          in cron format
                        type: string
                      timeZone:
                        description: TimeZone of the sync that will be applied to
                          the schedule
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: AppProjectStatus contains status information for AppProject
                CRs
              properties:
                jwtTokensByRole:
                  additionalProperties:
                    description: JWTTokens represents a list of JWT tokens
                    properties:
                      items:
                        items:
                          description: JWTToken holds the issuedAt and expiresAt values
                            of a token
                          properties:
                            exp:
                              format: int64
                              type: integer
                            iat:
                              format: int64
                              type: integer
                            id:
                              type: string
                          required:
                            - iat
                          type: object
                        type: array
                    type: object
                  description: JWTTokensByRole contains a list of JWT tokens issued
                    for a given role
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object
      served: true
      storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: argo-cd-redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha
  namespace: argocd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: argo-cd-redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-haproxy
  namespace: argocd
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-application-controller
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-server
---
apiVersion: v1
automountServiceAccountToken: true
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-dex-server
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-secret
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-secret
type: Opaque
---
apiVersion: v1
data:
  haproxy.cfg: "defaults REDIS\n  mode tcp\n  timeout connect 4s\n  timeout server\
    \ 330s\n  timeout client 330s\n  timeout check 2s\n\nlisten health_check_http_url\n\
    \  bind :8888\n  mode http\n  monitor-uri /healthz\n  option      dontlognull\n\
    # Check Sentinel and whether they are nominated master\nbackend check_if_redis_is_master_0\n\
    \  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\\
    r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\\
    \ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE0\n  tcp-check send\
    \ QUIT\\r\\n\n  tcp-check expect string +OK\n  server R0 argo-cd-redis-ha-announce-0:26379\
    \ check inter 1s\n  server R1 argo-cd-redis-ha-announce-1:26379 check inter 1s\n\
    \  server R2 argo-cd-redis-ha-announce-2:26379 check inter 1s\n# Check Sentinel\
    \ and whether they are nominated master\nbackend check_if_redis_is_master_1\n\
    \  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\\
    r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\\
    \ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE1\n  tcp-check send\
    \ QUIT\\r\\n\n  tcp-check expect string +OK\n  server R0 argo-cd-redis-ha-announce-0:26379\
    \ check inter 1s\n  server R1 argo-cd-redis-ha-announce-1:26379 check inter 1s\n\
    \  server R2 argo-cd-redis-ha-announce-2:26379 check inter 1s\n# Check Sentinel\
    \ and whether they are nominated master\nbackend check_if_redis_is_master_2\n\
    \  mode tcp\n  option tcp-check\n  tcp-check connect\n  tcp-check send PING\\\
    r\\n\n  tcp-check expect string +PONG\n  tcp-check send SENTINEL\\ get-master-addr-by-name\\\
    \ argocd\\r\\n\n  tcp-check expect string REPLACE_ANNOUNCE2\n  tcp-check send\
    \ QUIT\\r\\n\n  tcp-check expect string +OK\n  server R0 argo-cd-redis-ha-announce-0:26379\
    \ check inter 1s\n  server R1 argo-cd-redis-ha-announce-1:26379 check inter 1s\n\
    \  server R2 argo-cd-redis-ha-announce-2:26379 check inter 1s\n\n# decide redis\
    \ backend to use\n#master\nfrontend ft_redis_master\n  bind *:6379\n  use_backend\
    \ bk_redis_master\n# Check all redis servers to see if they think they are master\n\
    backend bk_redis_master\n  mode tcp\n  option tcp-check\n  tcp-check connect\n\
    \  tcp-check send PING\\r\\n\n  tcp-check expect string +PONG\n  tcp-check send\
    \ info\\ replication\\r\\n\n  tcp-check expect string role:master\n  tcp-check\
    \ send QUIT\\r\\n\n  tcp-check expect string +OK\n  use-server R0 if { srv_is_up(R0)\
    \ } { nbsrv(check_if_redis_is_master_0) ge 2 }\n  server R0 argo-cd-redis-ha-announce-0:6379\
    \ check inter 1s fall 1 rise 1\n  use-server R1 if { srv_is_up(R1) } { nbsrv(check_if_redis_is_master_1)\
    \ ge 2 }\n  server R1 argo-cd-redis-ha-announce-1:6379 check inter 1s fall 1 rise\
    \ 1\n  use-server R2 if { srv_is_up(R2) } { nbsrv(check_if_redis_is_master_2)\
    \ ge 2 }\n  server R2 argo-cd-redis-ha-announce-2:6379 check inter 1s fall 1 rise\
    \ 1\nfrontend metrics\n  mode http\n  bind *:9101\n  option http-use-htx\n  http-request\
    \ use-service prometheus-exporter if { path /metrics }\n"
  haproxy_init.sh: "HAPROXY_CONF=/data/haproxy.cfg\ncp /readonly/haproxy.cfg \"$HAPROXY_CONF\"\
    \nfor loop in $(seq 1 10); do\n  getent hosts argo-cd-redis-ha-announce-0 && break\n\
    \  echo \"Waiting for service argo-cd-redis-ha-announce-0 to be ready ($loop)\
    \ ...\" && sleep 1\ndone\nANNOUNCE_IP0=$(getent hosts \"argo-cd-redis-ha-announce-0\"\
    \ | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP0\" ]; then\n  echo \"Could not\
    \ resolve the announce ip for argo-cd-redis-ha-announce-0\"\n  exit 1\nfi\nsed\
    \ -i \"s/REPLACE_ANNOUNCE0/$ANNOUNCE_IP0/\" \"$HAPROXY_CONF\"\nfor loop in $(seq\
    \ 1 10); do\n  getent hosts argo-cd-redis-ha-announce-1 && break\n  echo \"Waiting\
    \ for service argo-cd-redis-ha-announce-1 to be ready ($loop) ...\" && sleep 1\n\
    done\nANNOUNCE_IP1=$(getent hosts \"argo-cd-redis-ha-announce-1\" | awk '{ print\
    \ $1 }')\nif [ -z \"$ANNOUNCE_IP1\" ]; then\n  echo \"Could not resolve the announce\
    \ ip for argo-cd-redis-ha-announce-1\"\n  exit 1\nfi\nsed -i \"s/REPLACE_ANNOUNCE1/$ANNOUNCE_IP1/\"\
    \ \"$HAPROXY_CONF\"\nfor loop in $(seq 1 10); do\n  getent hosts argo-cd-redis-ha-announce-2\
    \ && break\n  echo \"Waiting for service argo-cd-redis-ha-announce-2 to be ready\
    \ ($loop) ...\" && sleep 1\ndone\nANNOUNCE_IP2=$(getent hosts \"argo-cd-redis-ha-announce-2\"\
    \ | awk '{ print $1 }')\nif [ -z \"$ANNOUNCE_IP2\" ]; then\n  echo \"Could not\
    \ resolve the announce ip for argo-cd-redis-ha-announce-2\"\n  exit 1\nfi\nsed\
    \ -i \"s/REPLACE_ANNOUNCE2/$ANNOUNCE_IP2/\" \"$HAPROXY_CONF\"\n"
  init.sh: "echo \"$(date) Start...\"\nHOSTNAME=\"$(hostname)\"\nINDEX=\"${HOSTNAME##*-}\"\
    \nSENTINEL_PORT=26379\nMASTER=''\nMASTER_GROUP=\"argocd\"\nQUORUM=\"2\"\nREDIS_CONF=/data/conf/redis.conf\n\
    REDIS_PORT=6379\nREDIS_TLS_PORT=\nSENTINEL_CONF=/data/conf/sentinel.conf\nSENTINEL_TLS_PORT=\n\
    SERVICE=argo-cd-redis-ha\nSENTINEL_TLS_REPLICATION_ENABLED=false\nREDIS_TLS_REPLICATION_ENABLED=false\n\
    set -eu\n\nsentinel_get_master() {\nset +e\n    if [ \"$SENTINEL_PORT\" -eq 0\
    \ ]; then\n        redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls\
    \ --cacert /tls-certs/ca.crt --cert /tls-certs/redis.crt --key /tls-certs/redis.key\
    \ sentinel get-master-addr-by-name \"${MASTER_GROUP}\" |\\\n        grep -E '[0-9]{1,3}\\\
    .[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}'\n    else\n        redis-cli -h \"${SERVICE}\"\
    \ -p \"${SENTINEL_PORT}\"  sentinel get-master-addr-by-name \"${MASTER_GROUP}\"\
    \ |\\\n        grep -E '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}'\n \
    \   fi\nset -e\n}\n\nsentinel_get_master_retry() {\n    master=''\n    retry=${1}\n\
    \    sleep=3\n    for i in $(seq 1 \"${retry}\"); do\n        master=$(sentinel_get_master)\n\
    \        if [ -n \"${master}\" ]; then\n            break\n        fi\n      \
    \  sleep $((sleep + i))\n    done\n    echo \"${master}\"\n}\n\nidentify_master()\
    \ {\n    echo \"Identifying redis master (get-master-addr-by-name)..\"\n    echo\
    \ \"  using sentinel (argo-cd-redis-ha), sentinel group name (argocd)\"\n    echo\
    \ \"  $(date)..\"\n    MASTER=\"$(sentinel_get_master_retry 3)\"\n    if [ -n\
    \ \"${MASTER}\" ]; then\n        echo \"  $(date) Found redis master (${MASTER})\"\
    \n    else\n        echo \"  $(date) Did not find redis master (${MASTER})\"\n\
    \    fi\n}\n\nsentinel_update() {\n    echo \"Updating sentinel config..\"\n \
    \   echo \"  evaluating sentinel id (\\${SENTINEL_ID_${INDEX}})\"\n    eval MY_SENTINEL_ID=\"\
    \\$SENTINEL_ID_${INDEX}\"\n    echo \"  sentinel id (${MY_SENTINEL_ID}), sentinel\
    \ grp (${MASTER_GROUP}), quorum (${QUORUM})\"\n    sed -i \"1s/^/sentinel myid\
    \ ${MY_SENTINEL_ID}\\\\n/\" \"${SENTINEL_CONF}\"\n    if [ \"$SENTINEL_TLS_REPLICATION_ENABLED\"\
    \ = true ]; then\n        echo \"  redis master (${1}:${REDIS_TLS_PORT})\"\n \
    \       sed -i \"2s/^/sentinel monitor ${MASTER_GROUP} ${1} ${REDIS_TLS_PORT}\
    \ ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    else\n        echo \"  redis master\
    \ (${1}:${REDIS_PORT})\"\n        sed -i \"2s/^/sentinel monitor ${MASTER_GROUP}\
    \ ${1} ${REDIS_PORT} ${QUORUM} \\\\n/\" \"${SENTINEL_CONF}\"\n    fi\n    echo\
    \ \"sentinel announce-ip ${ANNOUNCE_IP}\" >> ${SENTINEL_CONF}\n    if [ \"$SENTINEL_PORT\"\
    \ -eq 0 ]; then\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_TLS_PORT})\"\
    \n        echo \"sentinel announce-port ${SENTINEL_TLS_PORT}\" >> ${SENTINEL_CONF}\n\
    \    else\n        echo \"  announce (${ANNOUNCE_IP}:${SENTINEL_PORT})\"\n   \
    \     echo \"sentinel announce-port ${SENTINEL_PORT}\" >> ${SENTINEL_CONF}\n \
    \   fi\n}\n\nredis_update() {\n    echo \"Updating redis config..\"\n    if [\
    \ \"$REDIS_TLS_REPLICATION_ENABLED\" = true ]; then\n        echo \"  we are slave\
    \ of redis master (${1}:${REDIS_TLS_PORT})\"\n        echo \"slaveof ${1} ${REDIS_TLS_PORT}\"\
    \ >> \"${REDIS_CONF}\"\n        echo \"slave-announce-port ${REDIS_TLS_PORT}\"\
    \ >> ${REDIS_CONF}\n    else\n        echo \"  we are slave of redis master (${1}:${REDIS_PORT})\"\
    \n        echo \"slaveof ${1} ${REDIS_PORT}\" >> \"${REDIS_CONF}\"\n        echo\
    \ \"slave-announce-port ${REDIS_PORT}\" >> ${REDIS_CONF}\n    fi\n    echo \"\
    slave-announce-ip ${ANNOUNCE_IP}\" >> ${REDIS_CONF}\n}\n\ncopy_config() {\n  \
    \  echo \"Copying default redis config..\"\n    echo \"  to '${REDIS_CONF}'\"\n\
    \    cp /readonly-config/redis.conf \"${REDIS_CONF}\"\n    echo \"Copying default\
    \ sentinel config..\"\n    echo \"  to '${SENTINEL_CONF}'\"\n    cp /readonly-config/sentinel.conf\
    \ \"${SENTINEL_CONF}\"\n}\n\nsetup_defaults() {\n    echo \"Setting up defaults..\"\
    \n    echo \"  using statefulset index (${INDEX})\"\n    if [ \"${INDEX}\" = \"\
    0\" ]; then\n        echo \"Setting this pod as master for redis and sentinel..\"\
    \n        echo \"  using announce (${ANNOUNCE_IP})\"\n        redis_update \"\
    ${ANNOUNCE_IP}\"\n        sentinel_update \"${ANNOUNCE_IP}\"\n        echo \"\
    \  make sure ${ANNOUNCE_IP} is not a slave (slaveof no one)\"\n        sed -i\
    \ \"s/^.*slaveof.*//\" \"${REDIS_CONF}\"\n    else\n        echo \"Getting redis\
    \ master ip..\"\n        echo \"  blindly assuming (${SERVICE}-announce-0) or\
    \ (${SERVICE}-server-0) are master\"\n        DEFAULT_MASTER=\"$(getent_hosts\
    \ 0 | awk '{ print $1 }')\"\n        echo \"  identified redis (may be redis master)\
    \ ip (${DEFAULT_MASTER})\"\n        if [ -z \"${DEFAULT_MASTER}\" ]; then\n  \
    \          echo \"Error: Unable to resolve redis master (getent hosts).\"\n  \
    \          exit 1\n        fi\n        echo \"Setting default slave config for\
    \ redis and sentinel..\"\n        echo \"  using master ip (${DEFAULT_MASTER})\"\
    \n        redis_update \"${DEFAULT_MASTER}\"\n        sentinel_update \"${DEFAULT_MASTER}\"\
    \n    fi\n}\n\nredis_ping() {\nset +e\n    if [ \"$REDIS_PORT\" -eq 0 ]; then\n\
    \        redis-cli -h \"${MASTER}\" -p \"${REDIS_TLS_PORT}\"  --tls --cacert /tls-certs/ca.crt\
    \ --cert /tls-certs/redis.crt --key /tls-certs/redis.key ping\n    else\n    \
    \    redis-cli -h \"${MASTER}\" -p \"${REDIS_PORT}\" ping\n    fi\nset -e\n}\n\
    \nredis_ping_retry() {\n    ping=''\n    retry=${1}\n    sleep=3\n    for i in\
    \ $(seq 1 \"${retry}\"); do\n        if [ \"$(redis_ping)\" = \"PONG\" ]; then\n\
    \           ping='PONG'\n           break\n        fi\n        sleep $((sleep\
    \ + i))\n        MASTER=$(sentinel_get_master)\n    done\n    echo \"${ping}\"\
    \n}\n\nfind_master() {\n    echo \"Verifying redis master..\"\n    if [ \"$REDIS_PORT\"\
    \ -eq 0 ]; then\n        echo \"  ping (${MASTER}:${REDIS_TLS_PORT})\"\n    else\n\
    \        echo \"  ping (${MASTER}:${REDIS_PORT})\"\n    fi\n    echo \"  $(date)..\"\
    \n    if [ \"$(redis_ping_retry 3)\" != \"PONG\" ]; then\n        echo \"  $(date)\
    \ Can't ping redis master (${MASTER})\"\n        echo \"Attempting to force failover\
    \ (sentinel failover)..\"\n\n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n \
    \           echo \"  on sentinel (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp\
    \ (${MASTER_GROUP})\"\n            echo \"  $(date)..\"\n            if redis-cli\
    \ -h \"${SERVICE}\" -p \"${SENTINEL_TLS_PORT}\"   --tls --cacert /tls-certs/ca.crt\
    \ --cert /tls-certs/redis.crt --key /tls-certs/redis.key sentinel failover \"\
    ${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"  $(date)\
    \ Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting defaults\
    \ for this pod..\"\n                setup_defaults\n                return 0\n\
    \            fi\n        else\n            echo \"  on sentinel (${SERVICE}:${SENTINEL_PORT}),\
    \ sentinel grp (${MASTER_GROUP})\"\n            echo \"  $(date)..\"\n       \
    \     if redis-cli -h \"${SERVICE}\" -p \"${SENTINEL_PORT}\"  sentinel failover\
    \ \"${MASTER_GROUP}\" | grep -q 'NOGOODSLAVE' ; then\n                echo \"\
    \  $(date) Failover returned with 'NOGOODSLAVE'\"\n                echo \"Setting\
    \ defaults for this pod..\"\n                setup_defaults\n                return\
    \ 0\n            fi\n        fi\n\n        echo \"Hold on for 10sec\"\n      \
    \  sleep 10\n        echo \"We should get redis master's ip now. Asking (get-master-addr-by-name)..\"\
    \n        if [ \"$SENTINEL_PORT\" -eq 0 ]; then\n            echo \"  sentinel\
    \ (${SERVICE}:${SENTINEL_TLS_PORT}), sentinel grp (${MASTER_GROUP})\"\n      \
    \  else\n            echo \"  sentinel (${SERVICE}:${SENTINEL_PORT}), sentinel\
    \ grp (${MASTER_GROUP})\"\n        fi\n        echo \"  $(date)..\"\n        MASTER=\"\
    $(sentinel_get_master)\"\n        if [ \"${MASTER}\" ]; then\n            echo\
    \ \"  $(date) Found redis master (${MASTER})\"\n            echo \"Updating redis\
    \ and sentinel config..\"\n            sentinel_update \"${MASTER}\"\n       \
    \     redis_update \"${MASTER}\"\n        else\n            echo \"$(date) Error:\
    \ Could not failover, exiting...\"\n            exit 1\n        fi\n    else\n\
    \        echo \"  $(date) Found reachable redis master (${MASTER})\"\n       \
    \ echo \"Updating redis and sentinel config..\"\n        sentinel_update \"${MASTER}\"\
    \n        redis_update \"${MASTER}\"\n    fi\n}\n\nredis_ro_update() {\n    echo\
    \ \"Updating read-only redis config..\"\n    echo \"  redis.conf set 'replica-priority\
    \ 0'\"\n    echo \"replica-priority 0\" >> ${REDIS_CONF}\n}\n\ngetent_hosts()\
    \ {\n    index=${1:-${INDEX}}\n    service=\"${SERVICE}-announce-${index}\"\n\
    \    pod=\"${SERVICE}-server-${index}\"\n    host=$(getent hosts \"${service}\"\
    )\n    if [ -z \"${host}\" ]; then\n        host=$(getent hosts \"${pod}\")\n\
    \    fi\n    echo \"${host}\"\n}\n\nmkdir -p /data/conf/\n\necho \"Initializing\
    \ config..\"\ncopy_config\n\n# where is redis master\nidentify_master\n\necho\
    \ \"Identify announce ip for this pod..\"\necho \"  using (${SERVICE}-announce-${INDEX})\
    \ or (${SERVICE}-server-${INDEX})\"\nANNOUNCE_IP=$(getent_hosts | awk '{ print\
    \ $1 }')\necho \"  identified announce (${ANNOUNCE_IP})\"\nif [ -z \"${ANNOUNCE_IP}\"\
    \ ]; then\n    \"Error: Could not resolve the announce ip for this pod.\"\n  \
    \  exit 1\nelif [ \"${MASTER}\" ]; then\n    find_master\nelse\n    setup_defaults\n\
    fi\n\nif [ \"${AUTH:-}\" ]; then\n    echo \"Setting redis auth values..\"\n \
    \   ESCAPED_AUTH=$(echo \"${AUTH}\" | sed -e 's/[\\/&]/\\\\&/g');\n    sed -i\
    \ \"s/replace-default-auth/${ESCAPED_AUTH}/\" \"${REDIS_CONF}\" \"${SENTINEL_CONF}\"\
    \nfi\n\nif [ \"${SENTINELAUTH:-}\" ]; then\n    echo \"Setting sentinel auth values\"\
    \n    ESCAPED_AUTH_SENTINEL=$(echo \"$SENTINELAUTH\" | sed -e 's/[\\/&]/\\\\&/g');\n\
    \    sed -i \"s/replace-default-sentinel-auth/${ESCAPED_AUTH_SENTINEL}/\" \"$SENTINEL_CONF\"\
    \nfi\n\necho \"$(date) Ready...\"\n"
  redis.conf: "dir \"/data\"\nport 6379\nmaxmemory 0\nmaxmemory-policy volatile-lru\n\
    min-replicas-max-lag 5\nmin-replicas-to-write 1\nrdbchecksum yes\nrdbcompression\
    \ yes\nrepl-diskless-sync yes\nsave \"\"\n"
  sentinel.conf: "dir \"/data\"\nport 26379\n    sentinel down-after-milliseconds\
    \ argocd 10000\n    sentinel failover-timeout argocd 180000\n    maxclients 10000\n\
    \    sentinel parallel-syncs argocd 5\n"
kind: ConfigMap
metadata:
  labels:
    app: argo-cd-redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-configmap
  namespace: argocd
---
apiVersion: v1
data:
  redis_liveness.sh: "response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 6379\
    \ \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] && [ \"${response:0:7}\" !=\
    \ \"LOADING\" ] ; then\n  echo \"$response\"\n  exit 1\nfi\necho \"response=$response\"\
    \n"
  redis_readiness.sh: "response=$(\n  redis-cli \\\n    -h localhost \\\n    -p 6379\
    \ \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ] ; then\n  echo \"$response\"\
    \n  exit 1\nfi\necho \"response=$response\"\n"
  sentinel_liveness.sh: "response=$(\n  redis-cli \\\n    -h localhost \\\n    -p\
    \ 26379 \\\n    ping\n)\nif [ \"$response\" != \"PONG\" ]; then\n  echo \"$response\"\
    \n  exit 1\nfi\necho \"response=$response\"\n"
kind: ConfigMap
metadata:
  labels:
    app: argo-cd-redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-health-configmap
  namespace: argocd
---
apiVersion: v1
data:
  application.instanceLabelKey: argocd.argoproj.io/instance
  configManagementPlugins: "- name: kapitan\n  generate:\n    args:\n    - for f in\
    \ *.yml; do echo '---'; cat $f | sed '1 s/^[-]{3}//'; done | kapitan refs --reveal\
    \ -f -\n    command:\n    - sh\n    - -c"
  url: https://argocd.example.com
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-gpg-keys-cm
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-gpg-keys-cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-rbac-cm
---
apiVersion: v1
data:
  ssh_known_hosts: "bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAubiN81eDcafrgMeLzaFPsw2kNvEcqTKl/VqLat/MaB33pZy0y3rJZtnqwR2qOOvbwKZYKiEO1O6VqNEBxKvJJelCq0dTXWT5pbO2gDXC6h6QDXCaHo6pOHGPUy+YBaGQRGuSusMEASYiWunYN0vCAI8QaXnWMXNMdFP3jHAJH0eDsoiGnLPBlBp4TNm6rYI74nMzgz3B9IikW4WVK+dc8KZJZWYjAuORU3jc1c/NPskD2ASinf8v3xnfXeukU0sJ5N6m5E8VLjObPEO+mN2t/FZTMZLiFqPWc/ALSqnMnnhwrNi2rbfg/rd/IpL8Le3pSBne8+seeFVBoGqzHM9yXw==\n\
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n\
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n\
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==\n\
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\n\
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\n\
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\n\
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n\
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-ssh-known-hosts-cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-tls-certs-cm
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argocd-tls-certs-cm
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - delete
      - get
      - patch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - list
  - apiGroups:
      - ''
    resources:
      - pods
      - pods/log
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-cd-argocd-application-controller
subjects:
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argo-cd-argocd-server
subjects:
  - kind: ServiceAccount
    name: argocd-server
    namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha
  namespace: argocd
rules:
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    component: argo-cd-redis-ha-haproxy
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-haproxy
  namespace: argocd
rules:
  - apiGroups:
      - ''
    resources:
      - endpoints
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - argoproj.io
    resources:
      - applications
      - appprojects
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - patch
      - delete
  - apiGroups:
      - argoproj.io
    resources:
      - applications
      - appprojects
    verbs:
      - create
      - get
      - list
      - watch
      - update
      - delete
      - patch
  - apiGroups:
      - ''
    resources:
      - events
    verbs:
      - create
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-dex-server
rules:
  - apiGroups:
      - ''
    resources:
      - secrets
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha
  namespace: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-cd-redis-ha
subjects:
  - kind: ServiceAccount
    name: argo-cd-redis-ha
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    component: argo-cd-redis-ha-haproxy
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-haproxy
  namespace: argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-cd-redis-ha-haproxy
subjects:
  - kind: ServiceAccount
    name: argo-cd-redis-ha-haproxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-cd-argocd-application-controller
subjects:
  - kind: ServiceAccount
    name: argocd-application-controller
    namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-cd-argocd-server
subjects:
  - kind: ServiceAccount
    name: argocd-server
    namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-dex-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: argo-cd-argocd-dex-server
subjects:
  - kind: ServiceAccount
    name: argocd-dex-server
    namespace: argocd
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-announce-0
  namespace: argocd
spec:
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
    - name: http-exporter
      port: 9121
      protocol: TCP
      targetPort: exporter-port
  publishNotReadyAddresses: true
  selector:
    app: redis-ha
    release: argo-cd
    statefulset.kubernetes.io/pod-name: argo-cd-redis-ha-server-0
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-announce-1
  namespace: argocd
spec:
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
    - name: http-exporter
      port: 9121
      protocol: TCP
      targetPort: exporter-port
  publishNotReadyAddresses: true
  selector:
    app: redis-ha
    release: argo-cd
    statefulset.kubernetes.io/pod-name: argo-cd-redis-ha-server-1
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-announce-2
  namespace: argocd
spec:
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
    - name: http-exporter
      port: 9121
      protocol: TCP
      targetPort: exporter-port
  publishNotReadyAddresses: true
  selector:
    app: redis-ha
    release: argo-cd
    statefulset.kubernetes.io/pod-name: argo-cd-redis-ha-server-2
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    exporter: enabled
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha
  namespace: argocd
spec:
  clusterIP: None
  ports:
    - name: tcp-server
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: tcp-sentinel
      port: 26379
      protocol: TCP
      targetPort: sentinel
    - name: http-exporter-port
      port: 9121
      protocol: TCP
      targetPort: exporter-port
  selector:
    app: redis-ha
    release: argo-cd
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    component: argo-cd-redis-ha-haproxy
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-haproxy
  namespace: argocd
spec:
  ports:
    - name: tcp-haproxy
      port: 6379
      protocol: TCP
      targetPort: redis
    - name: http-exporter-port
      port: 9101
      protocol: TCP
      targetPort: metrics-port
  selector:
    app: redis-ha-haproxy
    release: argo-cd
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-metrics
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller-metrics
spec:
  ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: controller
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-application-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller
spec:
  ports:
    - name: https-controller
      port: 8082
      targetPort: 8082
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-application-controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server-metrics
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-repo-server-metrics
spec:
  ports:
    - name: metrics
      port: 8084
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-repo-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-repo-server
spec:
  ports:
    - name: https-repo-server
      port: 8081
      protocol: TCP
      targetPort: repo-server
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-repo-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server-metrics
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server-metrics
spec:
  ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: server
    - name: https
      port: 443
      protocol: TCP
      targetPort: server
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-server
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-dex-server
spec:
  ports:
    - name: http
      port: 5556
      protocol: TCP
      targetPort: http
    - name: grpc
      port: 5557
      protocol: TCP
      targetPort: grpc
    - name: metrics
      port: 5558
      protocol: TCP
      targetPort: metrics
  selector:
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/name: argocd-dex-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: redis-ha
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-haproxy
  namespace: argocd
spec:
  replicas: 3
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: redis-ha-haproxy
      release: argo-cd
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: 1c1492c9767a6c7059b2dc6ec5b7ea0f0d18bec6f17664a4814c21bb00372c25
        prometheus.io/path: /metrics
        prometheus.io/port: '9101'
        prometheus.io/scrape: 'true'
      labels:
        app: redis-ha-haproxy
        release: argo-cd
        revision: '1'
      name: argo-cd-redis-ha-haproxy
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: redis-ha-haproxy
                  release: argo-cd
                  revision: '1'
              topologyKey: kubernetes.io/hostname
      containers:
        - image: haproxy:2.0.4
          imagePullPolicy: IfNotPresent
          lifecycle: {}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8888
            initialDelaySeconds: 5
            periodSeconds: 3
          name: haproxy
          ports:
            - containerPort: 6379
              name: redis
            - containerPort: 9101
              name: metrics-port
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8888
            initialDelaySeconds: 5
            periodSeconds: 3
          resources: {}
          volumeMounts:
            - mountPath: /usr/local/etc/haproxy
              name: data
            - mountPath: /run/haproxy
              name: shared-socket
      initContainers:
        - args:
            - /readonly/haproxy_init.sh
          command:
            - sh
          image: haproxy:2.0.4
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          volumeMounts:
            - mountPath: /readonly
              name: config-volume
              readOnly: true
            - mountPath: /data
              name: data
      nodeSelector: {}
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: argo-cd-redis-ha-haproxy
      tolerations: null
      volumes:
        - configMap:
            name: argo-cd-redis-ha-configmap
          name: config-volume
        - emptyDir: {}
          name: shared-socket
        - emptyDir: {}
          name: data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.2.3
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-application-controller
spec:
  replicas: 2
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-cd
      app.kubernetes.io/name: argocd-application-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/component: application-controller
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-application-controller
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.2.3
        helm.sh/chart: argo-cd-3.32.0
    spec:
      containers:
        - command:
            - argocd-application-controller
            - --status-processors
            - '20'
            - --operation-processors
            - '10'
            - --app-resync
            - '180'
            - --self-heal-timeout-seconds
            - '5'
            - --repo-server
            - argo-cd-argocd-repo-server:8081
            - --repo-server-timeout-seconds
            - '60'
            - --logformat
            - json
            - --loglevel
            - info
            - --redis
            - argo-cd-redis-ha-haproxy:6379
          image: quay.io/argoproj/argocd:v2.2.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: application-controller
          ports:
            - containerPort: 8082
              name: controller
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8082
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /home/argocd
              name: argocd-home
            - mountPath: /app/config/controller/tls
              name: argocd-repo-server-tls
            - mountPath: /etc/ssl/certs/example.root.crt
              name: selfsigned-certs
              subPath: example.root.crt
          workingDir: /home/argocd
      initContainers:
        - args:
            - wget --quiet --no-check-certificate https://vault.example.com/v1/example_certs/ca/pem
              -O /selfsigned-certs/example.root.crt
          command:
            - sh
            - -c
          image: alpine:3.15
          name: selfsigned-certs
          volumeMounts:
            - mountPath: /selfsigned-certs
              name: selfsigned-certs
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsUser: 999
      serviceAccountName: argocd-application-controller
      volumes:
        - emptyDir: {}
          name: argocd-home
        - name: argocd-repo-server-tls
          secret:
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - emptyDir: {}
          name: selfsigned-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.2.3
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-repo-server
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-cd
      app.kubernetes.io/name: argocd-repo-server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: repo-server
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-repo-server
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.2.3
        helm.sh/chart: argo-cd-3.32.0
    spec:
      containers:
        - args:
            - argocd-repo-server
            - --redis
            - argo-cd-redis-ha-haproxy:6379
            - --logformat
            - json
            - --loglevel
            - info
          image: quay.io/argoproj/argocd:v2.2.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          name: repo-server
          ports:
            - containerPort: 8081
              name: repo-server
              protocol: TCP
            - containerPort: 8084
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8081
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 2000m
              memory: 2048Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /usr/local/bin/kapitan
              name: custom-tools
              subPath: kapitan
            - mountPath: /usr/local/bin/kapitan-reveal
              name: custom-tools
              subPath: kapitan-reveal
            - mountPath: /etc/ssl/certs/example.root.crt
              name: selfsigned-certs
              subPath: example.root.crt
            - mountPath: /app/config/gpg/source
              name: gpg-keys
            - mountPath: /app/config/gpg/keys
              name: gpg-keyring
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/reposerver/tls
              name: argocd-repo-server-tls
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /home/argocd/cmp-server/plugins
              name: plugins
      initContainers:
        - command:
            - cp
            - -n
            - /usr/local/bin/argocd
            - /var/run/argocd/argocd-cmp-server
          image: quay.io/argoproj/argocd:v2.2.3
          name: copyutil
          resources: {}
          volumeMounts:
            - mountPath: /var/run/argocd
              name: var-files
        - args:
            - wget --quiet --no-check-certificate https://vault.example.com/v1/example_certs/ca/pem
              -O /selfsigned-certs/example.root.crt
          command:
            - sh
            - -c
          image: alpine:3.15
          name: selfsigned-certs
          volumeMounts:
            - mountPath: /selfsigned-certs
              name: selfsigned-certs
        - args:
            - cp /usr/local/bin/kapitan /custom-tools/
          command:
            - sh
            - -c
          image: kapitan/argocd
          name: kapitan
          volumeMounts:
            - mountPath: /custom-tools
              name: custom-tools
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsUser: 999
      serviceAccountName: default
      volumes:
        - emptyDir: {}
          name: custom-tools
        - emptyDir: {}
          name: selfsigned-certs
        - configMap:
            name: argocd-gpg-keys-cm
          name: gpg-keys
        - emptyDir: {}
          name: gpg-keyring
        - configMap:
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - name: argocd-repo-server-tls
          secret:
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - emptyDir: {}
          name: tmp-dir
        - emptyDir: {}
          name: var-files
        - emptyDir: {}
          name: plugins
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.2.3
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
spec:
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-cd
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: server
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-server
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.2.3
        helm.sh/chart: argo-cd-3.32.0
    spec:
      containers:
        - command:
            - argocd-server
            - --staticassets
            - /shared/app
            - --repo-server
            - argo-cd-argocd-repo-server:8081
            - --dex-server
            - http://argo-cd-argocd-dex-server:5556
            - --logformat
            - json
            - --loglevel
            - info
            - --redis
            - argo-cd-redis-ha-haproxy:6379
            - --insecure
          image: quay.io/argoproj/argocd:v2.2.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: server
          ports:
            - containerPort: 8080
              name: server
              protocol: TCP
            - containerPort: 8083
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
          securityContext:
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
          volumeMounts:
            - mountPath: /etc/ssl/certs/example.root.crt
              name: selfsigned-certs
              subPath: example.root.crt
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/server/tls
              name: argocd-repo-server-tls
            - mountPath: /home/argocd/.aws
              name: aws-config
            - mountPath: /home/argocd
              name: plugins-home
            - mountPath: /tmp
              name: tmp-dir
      initContainers:
        - args:
            - wget --quiet --no-check-certificate https://vault.example.com/v1/example_certs/ca/pem
              -O /selfsigned-certs/example.root.crt
          command:
            - sh
            - -c
          image: alpine:3.15
          name: selfsigned-certs
          volumeMounts:
            - mountPath: /selfsigned-certs
              name: selfsigned-certs
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsUser: 999
      serviceAccountName: argocd-server
      volumes:
        - emptyDir: {}
          name: selfsigned-certs
        - emptyDir: {}
          name: static-files
        - emptyDir: {}
          name: tmp-dir
        - emptyDir: {}
          name: aws-config
        - configMap:
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - name: argocd-repo-server-tls
          secret:
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
            optional: true
            secretName: argocd-repo-server-tls
        - emptyDir: {}
          name: plugins-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: dex-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-dex-server
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/version: v2.30.0
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-dex-server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: argo-cd
      app.kubernetes.io/name: argocd-dex-server
  template:
    metadata:
      labels:
        app.kubernetes.io/component: dex-server
        app.kubernetes.io/instance: argo-cd
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: argocd-dex-server
        app.kubernetes.io/part-of: argocd
        app.kubernetes.io/version: v2.30.0
        helm.sh/chart: argo-cd-3.32.0
    spec:
      containers:
        - command:
            - /shared/argocd-dex
            - rundex
          image: ghcr.io/dexidp/dex:v2.30.0
          imagePullPolicy: IfNotPresent
          name: dex-server
          ports:
            - containerPort: 5556
              name: http
              protocol: TCP
            - containerPort: 5557
              name: grpc
              protocol: TCP
            - containerPort: 5558
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
            - mountPath: /shared
              name: static-files
      initContainers:
        - command:
            - cp
            - -n
            - /usr/local/bin/argocd
            - /shared/argocd-dex
          image: quay.io/argoproj/argocd:v2.2.3
          imagePullPolicy: IfNotPresent
          name: copyutil
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          securityContext:
            capabilities:
              drop:
                - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /shared
              name: static-files
      securityContext:
        fsGroup: 999
        runAsGroup: 999
        runAsUser: 999
      serviceAccountName: argocd-dex-server
      volumes:
        - emptyDir: {}
          name: tmp-dir
        - emptyDir: {}
          name: static-files
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: repo-server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-repo-server-hpa
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-repo-server-hpa
spec:
  maxReplicas: 3
  metrics:
    - resource:
        name: memory
        targetAverageUtilization: 80
      type: Resource
    - resource:
        name: cpu
        targetAverageUtilization: 80
      type: Resource
  minReplicas: 2
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: argo-cd-argocd-repo-server
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server-hpa
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server-hpa
spec:
  maxReplicas: 2
  metrics:
    - resource:
        name: memory
        targetAverageUtilization: 50
      type: Resource
    - resource:
        name: cpu
        targetAverageUtilization: 50
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: argo-cd-argocd-server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations: {}
  labels:
    app: redis-ha
    argo-cd-redis-ha: replica
    chart: redis-ha-4.12.17
    heritage: Helm
    release: argo-cd
  name: argo-cd-redis-ha-server
  namespace: argocd
spec:
  podManagementPolicy: OrderedReady
  replicas: 3
  selector:
    matchLabels:
      app: redis-ha
      release: argo-cd
  serviceName: argo-cd-redis-ha
  template:
    metadata:
      annotations:
        checksum/init-config: bdaa86ab91cde102ba208960952bd54f8407a2e78200d71278890702eaf7d709
        prometheus.io/path: /metrics
        prometheus.io/port: '9121'
        prometheus.io/scrape: 'true'
      labels:
        app: redis-ha
        argo-cd-redis-ha: replica
        release: argo-cd
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: redis-ha
                  argo-cd-redis-ha: replica
                  release: argo-cd
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - /data/conf/redis.conf
          command:
            - redis-server
          image: redis:6.2.6-alpine
          imagePullPolicy: IfNotPresent
          lifecycle: {}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/redis_liveness.sh
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 15
          name: redis
          ports:
            - containerPort: 6379
              name: redis
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/redis_readiness.sh
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 15
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /health
              name: health
        - args:
            - /data/conf/sentinel.conf
          command:
            - redis-sentinel
          image: redis:6.2.6-alpine
          imagePullPolicy: IfNotPresent
          lifecycle: {}
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/sentinel_liveness.sh
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 15
          name: sentinel
          ports:
            - containerPort: 26379
              name: sentinel
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/sentinel_liveness.sh
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 3
            timeoutSeconds: 15
          resources: {}
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /health
              name: health
        - args: null
          env:
            - name: REDIS_ADDR
              value: redis://localhost:6379
          image: oliver006/redis_exporter:v1.15.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 3
          name: redis-exporter
          ports:
            - containerPort: 9121
              name: exporter-port
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 3
          resources: {}
          volumeMounts: null
      initContainers:
        - args:
            - /readonly-config/init.sh
          command:
            - sh
          env:
            - name: SENTINEL_ID_0
              value: 4794d0beec6abdd90a3821f7d9bf66804f290941
            - name: SENTINEL_ID_1
              value: c524e76c625cc68c94f25c99e20efce31df6f4c2
            - name: SENTINEL_ID_2
              value: 2f679f20284b54ed430b97819302f9dc0d48cb09
          image: redis:6.2.6-alpine
          imagePullPolicy: IfNotPresent
          name: config-init
          resources: {}
          volumeMounts:
            - mountPath: /readonly-config
              name: config
              readOnly: true
            - mountPath: /data
              name: data
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: argo-cd-redis-ha
      terminationGracePeriodSeconds: 60
      volumes:
        - configMap:
            name: argo-cd-redis-ha-configmap
          name: config
        - configMap:
            defaultMode: 493
            name: argo-cd-redis-ha-health-configmap
          name: health
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        annotations: null
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        storageClassName: longhorn
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/instance: argo-cd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
    helm.sh/chart: argo-cd-3.32.0
  name: argo-cd-argocd-server
spec:
  rules:
    - host: argocd.example.com
      http:
        paths:
          - backend:
              service:
                name: argo-cd-argocd-server
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - argocd.example.com
      secretName: argocd-server-tls
