# -------------------------------------------------
# Parameters
# -------------------------------------------------
parameters:
  <APP_NAME>:
    image: <IMAGE>
    version: <v.X.Y.Z>
    component: <GO/JAVA/JAVASCRIPT.....>
    schedule: "0 0 * * *"

  # -------------------------------------------------
  # Component/s
  # -------------------------------------------------
  components:
    <APP_NAME>:
      type: job
      schedule: ${<APP_NAME>:schedule}
      image: ${<APP_NAME>:image}
      pull_policy: Always

      # -------------------------------------------------
      # Metadata
      # -------------------------------------------------
      pod:
        labels:
          "app.kubernetes.io/running-on":
            fieldRef:
              fieldPath: spec.nodeName
      labels:
        app.kubernetes.io/version: ${<APP_NAME>:version}
        app.kubernetes.io/component: ${<APP_NAME>:component}

      completions: 1
      backoffLimit: 1
      parallelism: 1

      # -------------------------------------------------
      # Environment
      # -------------------------------------------------
      env:
        MY_ENV_SECRET:
          secretKeyRef:
            name: <SECRET_NAME>
            key: <SECRET_DATA_KEY_NAME>
        MY_ENV_CONFIGMAP:
          configMapKeyRef:
            name: <CONFIGMAP_NAME>
            key: <CONFIGMAP_DATA_KEY_NAME>
        MY_TYPICAL_ENV: anyValue

      # -------------------------------------------------
      # Container Argument / Command
      # -------------------------------------------------
      args:
        - -c
        - mycommand

      command:
        - sh
        - c
        - mycommand

      # -------------------------------------------------
      # Security
      # -------------------------------------------------
      host_pid: true

      security_context:
        runAsUser: 0
        runAsGroup: 0
        runAsNonRoot: true
        capabilities:
            drop:
            - ALL
      workload_security_context:
        fsGroup: 1000

      # -------------------------------------------------
      # Volumes / Mounts / Persistence
      # -------------------------------------------------
      volume_mounts:
        <VOLUME_NAME_HOSTPATH>:
          mountPath: /data
        <VOLUME_NAME_STORAGECLASS>:
          mountPath: /data
      volumes:
        <VOLUME_NAME_HOSTPATH>:
          hostPath:
            path: /my/path/on/disk
            type: DirectoryOrCreate
        <VOLUME_NAME_STORAGECLASS>:
          accessModes: ["ReadWriteOnce"]
          storageClassName: ${storageclass}
          resources:
            requests:
              storage: ${persistence:size}

      # -------------------------------------------------
      # Secrets
      # -------------------------------------------------
      secrets:
        <SECRET_NAME>:
          data:
            <SECRET_DATA_KEY_NAME>:
              versioned: true
              b64_encode: false
              value: ?{plain:targets/${target_name}/<APP_NAME>/<SECRET_DATA_KEY_NAME>||random:str:16|base64}

      # -------------------------------------------------
      # ConfigMaps
      # -------------------------------------------------
      config_maps:
        <CONFIGMAP_FROM_TEMPLATE_FILE>:
          mount: /etc/config.yml
          readOnly: true
          subPath: config.yml
          data:
            config.yml:
              template: components/<PATH_TO_FILE>/config.yml.j2
              values:
                <KEY>: "<VALUE>"
                <KEY>: ${variable:multiple:key_values}
        <CONFIGMAP_DIRECTLY_DEFINED_SIMPLE>:
          value: "not mounted"
        <CONFIGMAP_DIRECTLY_DEFINED_COMPLEX>:
          nginx.conf:
            value: |
              server {
                  listen       80;
                  server_name  localhost;
                  location / {
                      proxy_pass  http://localhost:8080/;
                  }
                  error_page   500 502 503 504  /50x.html;
                  location = /50x.html {
                      root   /usr/share/nginx/html;
                  }
              }